
AVRASM ver. 2.1.30  D:\4_HOC_AVR\CODEVISION\BTL_DOLUONG\List\BTL_DL.asm Thu May 02 21:52:36 2013

D:\4_HOC_AVR\CODEVISION\BTL_DOLUONG\List\BTL_DL.asm(1059): warning: Register r5 already defined by the .DEF directive
D:\4_HOC_AVR\CODEVISION\BTL_DOLUONG\List\BTL_DL.asm(1060): warning: Register r4 already defined by the .DEF directive
D:\4_HOC_AVR\CODEVISION\BTL_DOLUONG\List\BTL_DL.asm(1061): warning: Register r7 already defined by the .DEF directive
D:\4_HOC_AVR\CODEVISION\BTL_DOLUONG\List\BTL_DL.asm(1062): warning: Register r6 already defined by the .DEF directive
D:\4_HOC_AVR\CODEVISION\BTL_DOLUONG\List\BTL_DL.asm(1063): warning: Register r8 already defined by the .DEF directive
D:\4_HOC_AVR\CODEVISION\BTL_DOLUONG\List\BTL_DL.asm(1064): warning: Register r10 already defined by the .DEF directive
D:\4_HOC_AVR\CODEVISION\BTL_DOLUONG\List\BTL_DL.asm(1065): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega16
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Speed
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 256 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1119
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _rx_wr_index=R5
                 	.DEF _rx_rd_index=R4
                 	.DEF _rx_counter=R7
                 	.DEF _Data=R6
                 	.DEF _str_adc=R8
                 	.DEF _str_nguong=R10
                 	.DEF _Temp=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0130 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0160 	JMP  _usart_rx_isr
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 05d5 	JMP  _ext_int2_isr
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 _conv_delay_G104:
000033 0064
000034 00c8
000035 0190
000036 0320      	.DB  0x64,0x0,0xC8,0x0,0x90,0x1,0x20,0x3
                 _bit_mask_G104:
000037 fff8
000038 fffc
000039 fffe
00003a ffff      	.DB  0xF8,0xFF,0xFC,0xFF,0xFE,0xFF,0xFF,0xFF
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
00003b 0000      	.DW  0x0000
                 
                 _0xA:
D:\4_HOC_AVR\CODEVISION\BTL_DOLUONG\List\BTL_DL.asm(1111): warning: .cseg .db misalignment - padding zero byte
00003c 0064      	.DB  0x64
                 _0xB:
D:\4_HOC_AVR\CODEVISION\BTL_DOLUONG\List\BTL_DL.asm(1113): warning: .cseg .db misalignment - padding zero byte
00003d 0096      	.DB  0x96
                 _0xC:
D:\4_HOC_AVR\CODEVISION\BTL_DOLUONG\List\BTL_DL.asm(1115): warning: .cseg .db misalignment - padding zero byte
00003e 0003      	.DB  0x3
                 _0xD:
D:\4_HOC_AVR\CODEVISION\BTL_DOLUONG\List\BTL_DL.asm(1117): warning: .cseg .db misalignment - padding zero byte
00003f 0050      	.DB  0x50
                 _0xE:
D:\4_HOC_AVR\CODEVISION\BTL_DOLUONG\List\BTL_DL.asm(1119): warning: .cseg .db misalignment - padding zero byte
000040 001e      	.DB  0x1E
                 _0x0:
000041 3525
000042 0069
000043 0020
000044 4143      	.DB  0x25,0x35,0x69,0x0,0x20,0x0,0x43,0x41
000045 484e
000046 4220
000047 4f41
000048 4320      	.DB  0x4E,0x48,0x20,0x42,0x41,0x4F,0x20,0x43
000049 4148
00004a 0059
00004b 554d
00004c 2043      	.DB  0x48,0x41,0x59,0x0,0x4D,0x55,0x43,0x20
00004d 0031
00004e 554d
00004f 2043
000050 0032      	.DB  0x31,0x0,0x4D,0x55,0x43,0x20,0x32,0x0
000051 4143
000052 484e
000053 4220
000054 4f41      	.DB  0x43,0x41,0x4E,0x48,0x20,0x42,0x41,0x4F
000055 4400
000056 204b
000057 4850
000058 4e4f      	.DB  0x0,0x44,0x4B,0x20,0x50,0x48,0x4F,0x4E
000059 0047
00005a 644e
00005b 4100
00005c 0073      	.DB  0x47,0x0,0x4E,0x64,0x0,0x41,0x73,0x0
00005d 674e
00005e 6f75
00005f 676e
000060 4e5f      	.DB  0x4E,0x67,0x75,0x6F,0x6E,0x67,0x5F,0x4E
000061 0064
000062 5f31
000063 674e
000064 6f75      	.DB  0x64,0x0,0x31,0x5F,0x4E,0x67,0x75,0x6F
000065 676e
000066 415f
000067 0073
000068 5f32      	.DB  0x6E,0x67,0x5F,0x41,0x73,0x0,0x32,0x5F
000069 674e
00006a 6f75
00006b 676e
00006c 415f      	.DB  0x4E,0x67,0x75,0x6F,0x6E,0x67,0x5F,0x41
00006d 0073
00006e 3161
00006f 002d
000070 3161      	.DB  0x73,0x0,0x61,0x31,0x2D,0x0,0x61,0x31
000071 002b
000072 3261
000073 002b
000074 3261      	.DB  0x2B,0x0,0x61,0x32,0x2B,0x0,0x61,0x32
000075 002d
000076 3361
000077 315f
000078 002d      	.DB  0x2D,0x0,0x61,0x33,0x5F,0x31,0x2D,0x0
000079 3361
00007a 325f
00007b 002d
00007c 3361      	.DB  0x61,0x33,0x5F,0x32,0x2D,0x0,0x61,0x33
00007d 002b
00007e 484e
00007f 4549
000080 2054      	.DB  0x2B,0x0,0x4E,0x48,0x49,0x45,0x54,0x20
000081 4f44
000082 003a
000083 474e
000084 4f55      	.DB  0x44,0x4F,0x3A,0x0,0x4E,0x47,0x55,0x4F
000085 474e
000086 3a20
000087 2520
000088 6934      	.DB  0x4E,0x47,0x20,0x3A,0x20,0x25,0x34,0x69
000089 4300
00008a 4e41
00008b 2048
00008c 4142      	.DB  0x0,0x43,0x41,0x4E,0x48,0x20,0x42,0x41
00008d 204f
00008e 4843
00008f 5941
000090 003a      	.DB  0x4F,0x20,0x43,0x48,0x41,0x59,0x3A,0x0
000091 474e
000092 4f55
000093 474e
000094 3120      	.DB  0x4E,0x47,0x55,0x4F,0x4E,0x47,0x20,0x31
000095 3a20
000096 2520
000097 6934
000098 4e00      	.DB  0x20,0x3A,0x20,0x25,0x34,0x69,0x0,0x4E
000099 5547
00009a 4e4f
00009b 2047
00009c 2032      	.DB  0x47,0x55,0x4F,0x4E,0x47,0x20,0x32,0x20
00009d 203a
00009e 3425
00009f 0069
0000a0 4e41      	.DB  0x3A,0x20,0x25,0x34,0x69,0x0,0x41,0x4E
0000a1 2048
0000a2 4153
0000a3 474e
0000a4 003a      	.DB  0x48,0x20,0x53,0x41,0x4E,0x47,0x3A,0x0
0000a5 474e
0000a6 4f55
0000a7 474e
0000a8 3120      	.DB  0x4E,0x47,0x55,0x4F,0x4E,0x47,0x20,0x31
0000a9 203a
0000aa 3425
0000ab 0069
0000ac 474e      	.DB  0x3A,0x20,0x25,0x34,0x69,0x0,0x4E,0x47
0000ad 4f55
0000ae 474e
0000af 3220
0000b0 203a      	.DB  0x55,0x4F,0x4E,0x47,0x20,0x32,0x3A,0x20
0000b1 3425
0000b2 0069
0000b3 4157
0000b4 5449      	.DB  0x25,0x34,0x69,0x0,0x57,0x41,0x49,0x54
0000b5 4e49
0000b6 2047
0000b7 4f46
0000b8 0052      	.DB  0x49,0x4E,0x47,0x20,0x46,0x4F,0x52,0x0
0000b9 4553
0000ba 5454
0000bb 4e49
0000bc 2047      	.DB  0x53,0x45,0x54,0x54,0x49,0x4E,0x47,0x20
0000bd 5055
0000be 4200
0000bf 4c54
0000c0 4420      	.DB  0x55,0x50,0x0,0x42,0x54,0x4C,0x20,0x44
0000c1 544c
0000c2 4444
0000c3 004b
0000c4 5942      	.DB  0x4C,0x54,0x44,0x44,0x4B,0x0,0x42,0x59
0000c5 203a
0000c6 4353
0000c7 544e
0000c8 4720      	.DB  0x3A,0x20,0x53,0x43,0x4E,0x54,0x20,0x47
0000c9 4f52
0000ca 5055
0000cb 5300
0000cc 5445      	.DB  0x52,0x4F,0x55,0x50,0x0,0x53,0x45,0x54
0000cd 5520
0000ce 0050
0000cf 4c50
0000d0 4145      	.DB  0x20,0x55,0x50,0x0,0x50,0x4C,0x45,0x41
0000d1 4553
0000d2 0021
0000d3 4e41
0000d4 5420      	.DB  0x53,0x45,0x21,0x0,0x41,0x4E,0x20,0x54
0000d5 414f
0000d6 004e      	.DB  0x4F,0x41,0x4E,0x0
                 _0x2000003:
0000d7 c080      	.DB  0x80,0xC0
                 _0x2040060:
D:\4_HOC_AVR\CODEVISION\BTL_DOLUONG\List\BTL_DL.asm(1162): warning: .cseg .db misalignment - padding zero byte
0000d8 0001      	.DB  0x1
                 _0x2040000:
0000d9 4e2d
0000da 4e41
0000db 4900
0000dc 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\4_HOC_AVR\CODEVISION\BTL_DOLUONG\List\BTL_DL.asm(1165): warning: .cseg .db misalignment - padding zero byte
0000dd 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
0000de 0001      	.DW  0x01
0000df 0002      	.DW  0x02
0000e0 0076      	.DW  __REG_BIT_VARS*2
                 
0000e1 0001      	.DW  0x01
0000e2 0287      	.DW  _nguong_khoi_1
0000e3 0078      	.DW  _0xA*2
                 
0000e4 0001      	.DW  0x01
0000e5 0289      	.DW  _nguong_khoi_2
0000e6 007a      	.DW  _0xB*2
                 
0000e7 0001      	.DW  0x01
0000e8 028b      	.DW  _nguong_as_1
0000e9 007c      	.DW  _0xC*2
                 
0000ea 0001      	.DW  0x01
0000eb 028d      	.DW  _nguong_as_2
0000ec 007e      	.DW  _0xD*2
                 
0000ed 0001      	.DW  0x01
0000ee 028f      	.DW  _nguong_nhiet
0000ef 0080      	.DW  _0xE*2
                 
0000f0 0002      	.DW  0x02
0000f1 0160      	.DW  _0x30
0000f2 0086      	.DW  _0x0*2+4
                 
0000f3 000e      	.DW  0x0E
0000f4 0162      	.DW  _0x3E
0000f5 0088      	.DW  _0x0*2+6
                 
0000f6 0006      	.DW  0x06
0000f7 0170      	.DW  _0x3E+14
0000f8 0096      	.DW  _0x0*2+20
                 
0000f9 000e      	.DW  0x0E
0000fa 0176      	.DW  _0x3E+20
0000fb 0088      	.DW  _0x0*2+6
                 
0000fc 0006      	.DW  0x06
0000fd 0184      	.DW  _0x3E+34
0000fe 009c      	.DW  _0x0*2+26
                 
0000ff 0009      	.DW  0x09
000100 018a      	.DW  _0x3E+40
000101 00a2      	.DW  _0x0*2+32
                 
000102 0009      	.DW  0x09
000103 0193      	.DW  _0x3E+49
000104 00ab      	.DW  _0x0*2+41
                 
000105 000a      	.DW  0x0A
000106 019c      	.DW  _0x6A
000107 00fc      	.DW  _0x0*2+122
                 
000108 000f      	.DW  0x0F
000109 01a6      	.DW  _0x6A+10
00010a 0113      	.DW  _0x0*2+145
                 
00010b 000f      	.DW  0x0F
00010c 01b5      	.DW  _0x6A+25
00010d 0113      	.DW  _0x0*2+145
                 
00010e 000a      	.DW  0x0A
00010f 01c4      	.DW  _0x6A+40
000110 0140      	.DW  _0x0*2+190
                 
000111 000a      	.DW  0x0A
000112 01ce      	.DW  _0x6A+50
000113 0140      	.DW  _0x0*2+190
                 
000114 000c      	.DW  0x0C
000115 01d8      	.DW  _0x6A+60
000116 0166      	.DW  _0x0*2+228
                 
000117 000b      	.DW  0x0B
000118 01e4      	.DW  _0x6A+72
000119 0172      	.DW  _0x0*2+240
                 
00011a 000b      	.DW  0x0B
00011b 01ef      	.DW  _0x70
00011c 017d      	.DW  _0x0*2+251
                 
00011d 000f      	.DW  0x0F
00011e 01fa      	.DW  _0x70+11
00011f 0188      	.DW  _0x0*2+262
                 
000120 0007      	.DW  0x07
000121 0209      	.DW  _0x70+26
000122 0197      	.DW  _0x0*2+277
                 
000123 0008      	.DW  0x08
000124 0210      	.DW  _0x70+33
000125 019e      	.DW  _0x0*2+284
                 
000126 0008      	.DW  0x08
000127 0218      	.DW  _0x70+41
000128 01a6      	.DW  _0x0*2+292
                 
000129 0002      	.DW  0x02
00012a 0297      	.DW  __base_y_G100
00012b 01ae      	.DW  _0x2000003*2
                 
00012c 0001      	.DW  0x01
00012d 029e      	.DW  __seed_G102
00012e 01b0      	.DW  _0x2040060*2
                 
                 _0xFFFFFFFF:
00012f 0000      	.DW  0
                 
                 __RESET:
000130 94f8      	CLI
000131 27ee      	CLR  R30
000132 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000133 e0f1      	LDI  R31,1
000134 bffb      	OUT  GICR,R31
000135 bfeb      	OUT  GICR,R30
000136 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000137 e1f8      	LDI  R31,0x18
000138 bdf1      	OUT  WDTCR,R31
000139 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
00013a e08d      	LDI  R24,(14-2)+1
00013b e0a2      	LDI  R26,2
00013c 27bb      	CLR  R27
                 __CLEAR_REG:
00013d 93ed      	ST   X+,R30
00013e 958a      	DEC  R24
00013f f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000140 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000141 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000142 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000143 93ed      	ST   X+,R30
000144 9701      	SBIW R24,1
000145 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000146 ebec      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000147 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000148 9185      	LPM  R24,Z+
000149 9195      	LPM  R25,Z+
00014a 9700      	SBIW R24,0
00014b f061      	BREQ __GLOBAL_INI_END
00014c 91a5      	LPM  R26,Z+
00014d 91b5      	LPM  R27,Z+
00014e 9005      	LPM  R0,Z+
00014f 9015      	LPM  R1,Z+
000150 01bf      	MOVW R22,R30
000151 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000152 9005      	LPM  R0,Z+
000153 920d      	ST   X+,R0
000154 9701      	SBIW R24,1
000155 f7e1      	BRNE __GLOBAL_INI_LOOP
000156 01fb      	MOVW R30,R22
000157 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000158 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000159 bfed      	OUT  SPL,R30
00015a e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00015b bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00015c e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00015d e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00015e 940c 0764 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <main.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <main.h>
                 ;
                 ;// USART Receiver buffer
                 ;#define RX_BUFFER_SIZE 8
                 ;char rx_buffer[RX_BUFFER_SIZE];
                 ;
                 ;#if RX_BUFFER_SIZE <= 256
                 ;unsigned char rx_wr_index,rx_rd_index,rx_counter;
                 ;#else
                 ;unsigned int rx_wr_index,rx_rd_index,rx_counter;
                 ;#endif
                 ;
                 ;// This flag is set on USART Receiver buffer overflow
                 ;bit rx_buffer_overflow;
                 ;// TRINH PHUC VU NGAT DE NHAN DU LIEU
                 ;interrupt [USART_RXC] void usart_rx_isr(void)
                 ; 0000 0001 {
                 
                 	.CSEG
                 _usart_rx_isr:
000160 93ea      	ST   -Y,R30
000161 93fa      	ST   -Y,R31
000162 b7ef      	IN   R30,SREG
000163 93ea      	ST   -Y,R30
                 ;char status,data;
                 ;status=UCSRA;
000164 931a      	ST   -Y,R17
000165 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
000166 b11b      	IN   R17,11
                 ;data=UDR;
000167 b10c      	IN   R16,12
                 ;if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
000168 2fe1      	MOV  R30,R17
000169 71ec      	ANDI R30,LOW(0x1C)
00016a f489      	BRNE _0x3
                 ;   {
                 ;   rx_buffer[rx_wr_index++]=data;
00016b 2de5      	MOV  R30,R5
00016c 9453      	INC  R5
00016d e0f0      	LDI  R31,0
00016e 5ee0      	SUBI R30,LOW(-_rx_buffer)
00016f 4ffd      	SBCI R31,HIGH(-_rx_buffer)
000170 8300      	ST   Z,R16
                 ;#if RX_BUFFER_SIZE == 256
                 ;   // special case for receiver buffer size=256
                 ;   if (++rx_counter == 0)
                 ;      {
                 ;#else
                 ;   if (rx_wr_index == RX_BUFFER_SIZE) rx_wr_index=0;
000171 e0e8      	LDI  R30,LOW(8)
000172 15e5      	CP   R30,R5
000173 f409      	BRNE _0x4
000174 2455      	CLR  R5
                 ;   if (++rx_counter == RX_BUFFER_SIZE)
                 _0x4:
000175 9473      	INC  R7
000176 e0e8      	LDI  R30,LOW(8)
000177 15e7      	CP   R30,R7
000178 f419      	BRNE _0x5
                 ;      {
                 ;      rx_counter=0;
000179 2477      	CLR  R7
                 ;#endif
                 ;      rx_buffer_overflow=1;
00017a 9468      	SET
00017b f820      	BLD  R2,0
                 ;      }
                 ;   }
                 _0x5:
                 ;}
                 _0x3:
00017c 9109      	LD   R16,Y+
00017d 9119      	LD   R17,Y+
00017e 91e9      	LD   R30,Y+
00017f bfef      	OUT  SREG,R30
000180 91f9      	LD   R31,Y+
000181 91e9      	LD   R30,Y+
000182 9518      	RETI
                 ;
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;// Get a character from the USART Receiver buffer
                 ;#define _ALTERNATE_GETCHAR_
                 ;#pragma used+
                 ;char getchar(void)
                 ;{
                 ;char data;
                 ;while (rx_counter==0);
                 ;	data -> R17
                 ;data=rx_buffer[rx_rd_index++];
                 ;#if RX_BUFFER_SIZE != 256
                 ;if (rx_rd_index == RX_BUFFER_SIZE) rx_rd_index=0;
                 ;#endif
                 ;#asm("cli")
                 ;--rx_counter;
                 ;#asm("sei")
                 ;return data;
                 ;}
                 ;#pragma used-
                 ;#endif
                 ;// ------------------END OF FILE-------------------
                 ;// ------------------------------------------------
                 
                 	.DSEG
                 
                 	.CSEG
                 _but_ton_khoi_1:
000183 99b3      	SBIC 0x16,3
000184 c01d      	RJMP _0xF
000185 ece8      	LDI  R30,LOW(200)
000186 e0f0      	LDI  R31,HIGH(200)
000187 93fa      	ST   -Y,R31
000188 93ea      	ST   -Y,R30
000189 940e 0ce2 	CALL _delay_ms
00018b 99b3      	SBIC 0x16,3
00018c c015      	RJMP _0x10
00018d e8a7      	LDI  R26,LOW(_nguong_khoi_1)
00018e e0b2      	LDI  R27,HIGH(_nguong_khoi_1)
00018f 91ed      	LD   R30,X+
000190 91fd      	LD   R31,X+
000191 9631      	ADIW R30,1
000192 93fe      	ST   -X,R31
000193 93ee      	ST   -X,R30
000194 9731      	SBIW R30,1
000195 91a0 0287 	LDS  R26,_nguong_khoi_1
000197 91b0 0288 	LDS  R27,_nguong_khoi_1+1
000199 3faf      	CPI  R26,LOW(0x3FF)
00019a e0e3      	LDI  R30,HIGH(0x3FF)
00019b 07be      	CPC  R27,R30
00019c f028      	BRLO _0x11
00019d e0e0      	LDI  R30,LOW(0)
00019e 93e0 0287 	STS  _nguong_khoi_1,R30
0001a0 93e0 0288 	STS  _nguong_khoi_1+1,R30
                 _0x11:
                 _0x10:
                 _0xF:
0001a2 99b4      	SBIC 0x16,4
0001a3 c01c      	RJMP _0x12
0001a4 ece8      	LDI  R30,LOW(200)
0001a5 e0f0      	LDI  R31,HIGH(200)
0001a6 93fa      	ST   -Y,R31
0001a7 93ea      	ST   -Y,R30
0001a8 940e 0ce2 	CALL _delay_ms
0001aa 99b4      	SBIC 0x16,4
0001ab c014      	RJMP _0x13
0001ac e8a7      	LDI  R26,LOW(_nguong_khoi_1)
0001ad e0b2      	LDI  R27,HIGH(_nguong_khoi_1)
0001ae 91ed      	LD   R30,X+
0001af 91fd      	LD   R31,X+
0001b0 9731      	SBIW R30,1
0001b1 93fe      	ST   -X,R31
0001b2 93ee      	ST   -X,R30
0001b3 9631      	ADIW R30,1
0001b4 91a0 0287 	LDS  R26,_nguong_khoi_1
0001b6 91b0 0288 	LDS  R27,_nguong_khoi_1+1
0001b8 9710      	SBIW R26,0
0001b9 f431      	BRNE _0x14
0001ba efef      	LDI  R30,LOW(1023)
0001bb e0f3      	LDI  R31,HIGH(1023)
0001bc 93e0 0287 	STS  _nguong_khoi_1,R30
0001be 93f0 0288 	STS  _nguong_khoi_1+1,R31
                 _0x14:
                 _0x13:
                 _0x12:
0001c0 9508      	RET
                 _but_ton_khoi_2:
0001c1 99b3      	SBIC 0x16,3
0001c2 c01d      	RJMP _0x15
0001c3 ece8      	LDI  R30,LOW(200)
0001c4 e0f0      	LDI  R31,HIGH(200)
0001c5 93fa      	ST   -Y,R31
0001c6 93ea      	ST   -Y,R30
0001c7 940e 0ce2 	CALL _delay_ms
0001c9 99b3      	SBIC 0x16,3
0001ca c015      	RJMP _0x16
0001cb e8a9      	LDI  R26,LOW(_nguong_khoi_2)
0001cc e0b2      	LDI  R27,HIGH(_nguong_khoi_2)
0001cd 91ed      	LD   R30,X+
0001ce 91fd      	LD   R31,X+
0001cf 9631      	ADIW R30,1
0001d0 93fe      	ST   -X,R31
0001d1 93ee      	ST   -X,R30
0001d2 9731      	SBIW R30,1
0001d3 91a0 0289 	LDS  R26,_nguong_khoi_2
0001d5 91b0 028a 	LDS  R27,_nguong_khoi_2+1
0001d7 3faf      	CPI  R26,LOW(0x3FF)
0001d8 e0e3      	LDI  R30,HIGH(0x3FF)
0001d9 07be      	CPC  R27,R30
0001da f028      	BRLO _0x17
0001db e0e0      	LDI  R30,LOW(0)
0001dc 93e0 0289 	STS  _nguong_khoi_2,R30
0001de 93e0 028a 	STS  _nguong_khoi_2+1,R30
                 _0x17:
                 _0x16:
                 _0x15:
0001e0 99b4      	SBIC 0x16,4
0001e1 c01c      	RJMP _0x18
0001e2 ece8      	LDI  R30,LOW(200)
0001e3 e0f0      	LDI  R31,HIGH(200)
0001e4 93fa      	ST   -Y,R31
0001e5 93ea      	ST   -Y,R30
0001e6 940e 0ce2 	CALL _delay_ms
0001e8 99b4      	SBIC 0x16,4
0001e9 c014      	RJMP _0x19
0001ea e8a9      	LDI  R26,LOW(_nguong_khoi_2)
0001eb e0b2      	LDI  R27,HIGH(_nguong_khoi_2)
0001ec 91ed      	LD   R30,X+
0001ed 91fd      	LD   R31,X+
0001ee 9731      	SBIW R30,1
0001ef 93fe      	ST   -X,R31
0001f0 93ee      	ST   -X,R30
0001f1 9631      	ADIW R30,1
0001f2 91a0 0289 	LDS  R26,_nguong_khoi_2
0001f4 91b0 028a 	LDS  R27,_nguong_khoi_2+1
0001f6 9710      	SBIW R26,0
0001f7 f431      	BRNE _0x1A
0001f8 efef      	LDI  R30,LOW(1023)
0001f9 e0f3      	LDI  R31,HIGH(1023)
0001fa 93e0 0289 	STS  _nguong_khoi_2,R30
0001fc 93f0 028a 	STS  _nguong_khoi_2+1,R31
                 _0x1A:
                 _0x19:
                 _0x18:
0001fe 9508      	RET
                 _but_ton_nhiet:
0001ff 99b3      	SBIC 0x16,3
000200 c01d      	RJMP _0x1B
000201 ece8      	LDI  R30,LOW(200)
000202 e0f0      	LDI  R31,HIGH(200)
000203 93fa      	ST   -Y,R31
000204 93ea      	ST   -Y,R30
000205 940e 0ce2 	CALL _delay_ms
000207 99b3      	SBIC 0x16,3
000208 c015      	RJMP _0x1C
000209 e8af      	LDI  R26,LOW(_nguong_nhiet)
00020a e0b2      	LDI  R27,HIGH(_nguong_nhiet)
00020b 91ed      	LD   R30,X+
00020c 91fd      	LD   R31,X+
00020d 9631      	ADIW R30,1
00020e 93fe      	ST   -X,R31
00020f 93ee      	ST   -X,R30
000210 9731      	SBIW R30,1
000211 91a0 028f 	LDS  R26,_nguong_nhiet
000213 91b0 0290 	LDS  R27,_nguong_nhiet+1
000215 37ad      	CPI  R26,LOW(0x7D)
000216 e0e0      	LDI  R30,HIGH(0x7D)
000217 07be      	CPC  R27,R30
000218 f028      	BRLO _0x1D
000219 e0e0      	LDI  R30,LOW(0)
00021a 93e0 028f 	STS  _nguong_nhiet,R30
00021c 93e0 0290 	STS  _nguong_nhiet+1,R30
                 _0x1D:
                 _0x1C:
                 _0x1B:
00021e 99b4      	SBIC 0x16,4
00021f c01c      	RJMP _0x1E
000220 ece8      	LDI  R30,LOW(200)
000221 e0f0      	LDI  R31,HIGH(200)
000222 93fa      	ST   -Y,R31
000223 93ea      	ST   -Y,R30
000224 940e 0ce2 	CALL _delay_ms
000226 99b4      	SBIC 0x16,4
000227 c014      	RJMP _0x1F
000228 e8af      	LDI  R26,LOW(_nguong_nhiet)
000229 e0b2      	LDI  R27,HIGH(_nguong_nhiet)
00022a 91ed      	LD   R30,X+
00022b 91fd      	LD   R31,X+
00022c 9731      	SBIW R30,1
00022d 93fe      	ST   -X,R31
00022e 93ee      	ST   -X,R30
00022f 9631      	ADIW R30,1
000230 91a0 028f 	LDS  R26,_nguong_nhiet
000232 91b0 0290 	LDS  R27,_nguong_nhiet+1
000234 9710      	SBIW R26,0
000235 f431      	BRNE _0x20
000236 e7ec      	LDI  R30,LOW(124)
000237 e0f0      	LDI  R31,HIGH(124)
000238 93e0 028f 	STS  _nguong_nhiet,R30
00023a 93f0 0290 	STS  _nguong_nhiet+1,R31
                 _0x20:
                 _0x1F:
                 _0x1E:
00023c 9508      	RET
                 _but_ton_as_1:
00023d 99b3      	SBIC 0x16,3
00023e c01d      	RJMP _0x21
00023f ece8      	LDI  R30,LOW(200)
000240 e0f0      	LDI  R31,HIGH(200)
000241 93fa      	ST   -Y,R31
000242 93ea      	ST   -Y,R30
000243 940e 0ce2 	CALL _delay_ms
000245 99b3      	SBIC 0x16,3
000246 c015      	RJMP _0x22
000247 e8ab      	LDI  R26,LOW(_nguong_as_1)
000248 e0b2      	LDI  R27,HIGH(_nguong_as_1)
000249 91ed      	LD   R30,X+
00024a 91fd      	LD   R31,X+
00024b 9631      	ADIW R30,1
00024c 93fe      	ST   -X,R31
00024d 93ee      	ST   -X,R30
00024e 9731      	SBIW R30,1
00024f 91a0 028b 	LDS  R26,_nguong_as_1
000251 91b0 028c 	LDS  R27,_nguong_as_1+1
000253 3faf      	CPI  R26,LOW(0x3FF)
000254 e0e3      	LDI  R30,HIGH(0x3FF)
000255 07be      	CPC  R27,R30
000256 f028      	BRLO _0x23
000257 e0e0      	LDI  R30,LOW(0)
000258 93e0 028b 	STS  _nguong_as_1,R30
00025a 93e0 028c 	STS  _nguong_as_1+1,R30
                 _0x23:
                 _0x22:
                 _0x21:
00025c 99b4      	SBIC 0x16,4
00025d c01c      	RJMP _0x24
00025e ece8      	LDI  R30,LOW(200)
00025f e0f0      	LDI  R31,HIGH(200)
000260 93fa      	ST   -Y,R31
000261 93ea      	ST   -Y,R30
000262 940e 0ce2 	CALL _delay_ms
000264 99b4      	SBIC 0x16,4
000265 c014      	RJMP _0x25
000266 e8ab      	LDI  R26,LOW(_nguong_as_1)
000267 e0b2      	LDI  R27,HIGH(_nguong_as_1)
000268 91ed      	LD   R30,X+
000269 91fd      	LD   R31,X+
00026a 9731      	SBIW R30,1
00026b 93fe      	ST   -X,R31
00026c 93ee      	ST   -X,R30
00026d 9631      	ADIW R30,1
00026e 91a0 028b 	LDS  R26,_nguong_as_1
000270 91b0 028c 	LDS  R27,_nguong_as_1+1
000272 9710      	SBIW R26,0
000273 f431      	BRNE _0x26
000274 e6e3      	LDI  R30,LOW(99)
000275 e0f0      	LDI  R31,HIGH(99)
000276 93e0 028b 	STS  _nguong_as_1,R30
000278 93f0 028c 	STS  _nguong_as_1+1,R31
                 _0x26:
                 _0x25:
                 _0x24:
00027a 9508      	RET
                 _but_ton_as_2:
00027b 99b3      	SBIC 0x16,3
00027c c01d      	RJMP _0x27
00027d ece8      	LDI  R30,LOW(200)
00027e e0f0      	LDI  R31,HIGH(200)
00027f 93fa      	ST   -Y,R31
000280 93ea      	ST   -Y,R30
000281 940e 0ce2 	CALL _delay_ms
000283 99b3      	SBIC 0x16,3
000284 c015      	RJMP _0x28
000285 e8ad      	LDI  R26,LOW(_nguong_as_2)
000286 e0b2      	LDI  R27,HIGH(_nguong_as_2)
000287 91ed      	LD   R30,X+
000288 91fd      	LD   R31,X+
000289 9631      	ADIW R30,1
00028a 93fe      	ST   -X,R31
00028b 93ee      	ST   -X,R30
00028c 9731      	SBIW R30,1
00028d 91a0 028d 	LDS  R26,_nguong_as_2
00028f 91b0 028e 	LDS  R27,_nguong_as_2+1
000291 3faf      	CPI  R26,LOW(0x3FF)
000292 e0e3      	LDI  R30,HIGH(0x3FF)
000293 07be      	CPC  R27,R30
000294 f028      	BRLO _0x29
000295 e0e0      	LDI  R30,LOW(0)
000296 93e0 028d 	STS  _nguong_as_2,R30
000298 93e0 028e 	STS  _nguong_as_2+1,R30
                 _0x29:
                 _0x28:
                 _0x27:
00029a 99b4      	SBIC 0x16,4
00029b c01c      	RJMP _0x2A
00029c ece8      	LDI  R30,LOW(200)
00029d e0f0      	LDI  R31,HIGH(200)
00029e 93fa      	ST   -Y,R31
00029f 93ea      	ST   -Y,R30
0002a0 940e 0ce2 	CALL _delay_ms
0002a2 99b4      	SBIC 0x16,4
0002a3 c014      	RJMP _0x2B
0002a4 e8ad      	LDI  R26,LOW(_nguong_as_2)
0002a5 e0b2      	LDI  R27,HIGH(_nguong_as_2)
0002a6 91ed      	LD   R30,X+
0002a7 91fd      	LD   R31,X+
0002a8 9731      	SBIW R30,1
0002a9 93fe      	ST   -X,R31
0002aa 93ee      	ST   -X,R30
0002ab 9631      	ADIW R30,1
0002ac 91a0 028d 	LDS  R26,_nguong_as_2
0002ae 91b0 028e 	LDS  R27,_nguong_as_2+1
0002b0 9710      	SBIW R26,0
0002b1 f431      	BRNE _0x2C
0002b2 e6e3      	LDI  R30,LOW(99)
0002b3 e0f0      	LDI  R31,HIGH(99)
0002b4 93e0 028d 	STS  _nguong_as_2,R30
0002b6 93f0 028e 	STS  _nguong_as_2+1,R31
                 _0x2C:
                 _0x2B:
                 _0x2A:
0002b8 9508      	RET
                 _read_adc:
                 ;	adc_channel -> Y+0
0002b9 81e8      	LD   R30,Y
0002ba b9e7      	OUT  0x7,R30
0002bb 9a36      	SBI  0x6,6
                 _0x2D:
0002bc 9b34      	SBIS 0x6,4
0002bd cffe      	RJMP _0x2D
0002be 9a34      	SBI  0x6,4
0002bf b1e4      	IN   R30,0x4
0002c0 b1f5      	IN   R31,0x4+1
0002c1 940c 0977 	JMP  _0x20E0005
                 ;	*ch -> Y+2
                 ;	x -> Y+0
                 
                 	.DSEG
                 _0x30:
000160           	.BYTE 0x2
                 
                 	.CSEG
                 _read_parameter:
0002c3 91e0 025d 	LDS  R30,_T
0002c5 91f0 025e 	LDS  R31,_T+1
0002c7 93fa      	ST   -Y,R31
0002c8 93ea      	ST   -Y,R30
0002c9 940e 0c34 	CALL _ds18b20_temperature
0002cb 940e 0d83 	CALL __CFD1
0002cd 016f      	MOVW R12,R30
0002ce e0e0      	LDI  R30,LOW(0)
0002cf 93ea      	ST   -Y,R30
0002d0 dfe8      	RCALL _read_adc
0002d1 93e0 025f 	STS  _khoi,R30
0002d3 93f0 0260 	STS  _khoi+1,R31
0002d5 e0e1      	LDI  R30,LOW(1)
0002d6 93ea      	ST   -Y,R30
0002d7 dfe1      	RCALL _read_adc
0002d8 2766      	CLR  R22
0002d9 2777      	CLR  R23
0002da 940e 0dba 	CALL __CDF1
                +
0002dc e7ab     +LDI R26 , LOW ( 0x3E2E147B )
0002dd e1b4     +LDI R27 , HIGH ( 0x3E2E147B )
0002de e28e     +LDI R24 , BYTE3 ( 0x3E2E147B )
0002df e39e     +LDI R25 , BYTE4 ( 0x3E2E147B )
                 	__GETD2N 0x3E2E147B
0002e0 940e 0de8 	CALL __MULF12
0002e2 e6a1      	LDI  R26,LOW(_anh_sang)
0002e3 e0b2      	LDI  R27,HIGH(_anh_sang)
0002e4 940e 0d81 	CALL __CFD1U
0002e6 93ed      	ST   X+,R30
0002e7 93fc      	ST   X,R31
0002e8 9508      	RET
                 _so_sanh:
0002e9 91a0 026f 	LDS  R26,_Temp_0_G000
0002eb 91b0 0270 	LDS  R27,_Temp_0_G000+1
0002ed 01f6      	MOVW R30,R12
0002ee 1bea      	SUB  R30,R26
0002ef 0bfb      	SBC  R31,R27
0002f0 93e0 0283 	STS  _Temp_ss,R30
0002f2 93f0 0284 	STS  _Temp_ss+1,R31
0002f4 91a0 0267 	LDS  R26,_khoi_0_1_G000
0002f6 91b0 0268 	LDS  R27,_khoi_0_1_G000+1
0002f8 91e0 025f 	LDS  R30,_khoi
0002fa 91f0 0260 	LDS  R31,_khoi+1
0002fc 1bea      	SUB  R30,R26
0002fd 0bfb      	SBC  R31,R27
0002fe 93e0 027b 	STS  _khoi_ss_1,R30
000300 93f0 027c 	STS  _khoi_ss_1+1,R31
000302 91a0 0269 	LDS  R26,_khoi_0_2_G000
000304 91b0 026a 	LDS  R27,_khoi_0_2_G000+1
000306 91e0 025f 	LDS  R30,_khoi
000308 91f0 0260 	LDS  R31,_khoi+1
00030a 1bea      	SUB  R30,R26
00030b 0bfb      	SBC  R31,R27
00030c 93e0 027d 	STS  _khoi_ss_2,R30
00030e 93f0 027e 	STS  _khoi_ss_2+1,R31
000310 91a0 026b 	LDS  R26,_anh_sang_0_1_G000
000312 91b0 026c 	LDS  R27,_anh_sang_0_1_G000+1
000314 91e0 0261 	LDS  R30,_anh_sang
000316 91f0 0262 	LDS  R31,_anh_sang+1
000318 1bea      	SUB  R30,R26
000319 0bfb      	SBC  R31,R27
00031a 93e0 027f 	STS  _anh_sang_ss_1,R30
00031c 93f0 0280 	STS  _anh_sang_ss_1+1,R31
00031e 91a0 026d 	LDS  R26,_anh_sang_0_2_G000
000320 91b0 026e 	LDS  R27,_anh_sang_0_2_G000+1
000322 91e0 0261 	LDS  R30,_anh_sang
000324 91f0 0262 	LDS  R31,_anh_sang+1
000326 1bea      	SUB  R30,R26
000327 0bfb      	SBC  R31,R27
000328 93e0 0281 	STS  _anh_sang_ss_2,R30
00032a 93f0 0282 	STS  _anh_sang_ss_2+1,R31
00032c 91a0 0284 	LDS  R26,_Temp_ss+1
00032e 23aa      	TST  R26
00032f f032      	BRMI _0x31
000330 e0e0      	LDI  R30,LOW(0)
000331 93e0 0271 	STS  _cb_Temp_G000,R30
000333 93e0 0272 	STS  _cb_Temp_G000+1,R30
000335 c006      	RJMP _0x32
                 _0x31:
000336 e0e1      	LDI  R30,LOW(1)
000337 e0f0      	LDI  R31,HIGH(1)
000338 93e0 0271 	STS  _cb_Temp_G000,R30
00033a 93f0 0272 	STS  _cb_Temp_G000+1,R31
                 _0x32:
00033c 91a0 027c 	LDS  R26,_khoi_ss_1+1
00033e 23aa      	TST  R26
00033f f022      	BRMI _0x34
000340 91a0 027e 	LDS  R26,_khoi_ss_2+1
000342 23aa      	TST  R26
000343 f00a      	BRMI _0x35
                 _0x34:
000344 c006      	RJMP _0x33
                 _0x35:
000345 e0e0      	LDI  R30,LOW(0)
000346 93e0 0273 	STS  _cb_khoi_1_G000,R30
000348 93e0 0274 	STS  _cb_khoi_1_G000+1,R30
00034a c006      	RJMP _0x36
                 _0x33:
00034b e0e1      	LDI  R30,LOW(1)
00034c e0f0      	LDI  R31,HIGH(1)
00034d 93e0 0273 	STS  _cb_khoi_1_G000,R30
00034f 93f0 0274 	STS  _cb_khoi_1_G000+1,R31
                 _0x36:
000351 91a0 027e 	LDS  R26,_khoi_ss_2+1
000353 23aa      	TST  R26
000354 f032      	BRMI _0x37
000355 e0e0      	LDI  R30,LOW(0)
000356 93e0 0275 	STS  _cb_khoi_2_G000,R30
000358 93e0 0276 	STS  _cb_khoi_2_G000+1,R30
00035a c006      	RJMP _0x38
                 _0x37:
00035b e0e1      	LDI  R30,LOW(1)
00035c e0f0      	LDI  R31,HIGH(1)
00035d 93e0 0275 	STS  _cb_khoi_2_G000,R30
00035f 93f0 0276 	STS  _cb_khoi_2_G000+1,R31
                 _0x38:
000361 91a0 027f 	LDS  R26,_anh_sang_ss_1
000363 91b0 0280 	LDS  R27,_anh_sang_ss_1+1
000365 940e 0e66 	CALL __CPW02
000367 f034      	BRLT _0x39
000368 e0e0      	LDI  R30,LOW(0)
000369 93e0 0277 	STS  _cb_anh_sang_1_G000,R30
00036b 93e0 0278 	STS  _cb_anh_sang_1_G000+1,R30
00036d c006      	RJMP _0x3A
                 _0x39:
00036e e0e1      	LDI  R30,LOW(1)
00036f e0f0      	LDI  R31,HIGH(1)
000370 93e0 0277 	STS  _cb_anh_sang_1_G000,R30
000372 93f0 0278 	STS  _cb_anh_sang_1_G000+1,R31
                 _0x3A:
000374 91a0 0282 	LDS  R26,_anh_sang_ss_2+1
000376 23aa      	TST  R26
000377 f032      	BRMI _0x3B
000378 e0e0      	LDI  R30,LOW(0)
000379 93e0 0279 	STS  _cb_anh_sang_2_G000,R30
00037b 93e0 027a 	STS  _cb_anh_sang_2_G000+1,R30
00037d c006      	RJMP _0x3C
                 _0x3B:
00037e e0e1      	LDI  R30,LOW(1)
00037f e0f0      	LDI  R31,HIGH(1)
000380 93e0 0279 	STS  _cb_anh_sang_2_G000,R30
000382 93f0 027a 	STS  _cb_anh_sang_2_G000+1,R31
                 _0x3C:
000384 9508      	RET
                 _dis_LCD_cb:
000385 940e 08e5 	CALL _lcd_clear
000387 91e0 0273 	LDS  R30,_cb_khoi_1_G000
000389 91f0 0274 	LDS  R31,_cb_khoi_1_G000+1
00038b 9730      	SBIW R30,0
00038c f4b1      	BRNE _0x3D
00038d 940e 08e5 	CALL _lcd_clear
00038f e0e0      	LDI  R30,LOW(0)
000390 93ea      	ST   -Y,R30
000391 93ea      	ST   -Y,R30
000392 940e 08d4 	CALL _lcd_gotoxy
                +
000394 e6e2     +LDI R30 , LOW ( _0x3E + ( 0 ) )
000395 e0f1     +LDI R31 , HIGH ( _0x3E + ( 0 ) )
                 	__POINTW1MN _0x3E,0
000396 93fa      	ST   -Y,R31
000397 93ea      	ST   -Y,R30
000398 940e 0921 	CALL _lcd_puts
00039a e0e0      	LDI  R30,LOW(0)
00039b 93ea      	ST   -Y,R30
00039c e0e1      	LDI  R30,LOW(1)
00039d 93ea      	ST   -Y,R30
00039e 940e 08d4 	CALL _lcd_gotoxy
                +
0003a0 e7e0     +LDI R30 , LOW ( _0x3E + ( 14 ) )
0003a1 e0f1     +LDI R31 , HIGH ( _0x3E + ( 14 ) )
                 	__POINTW1MN _0x3E,14
0003a2 c043      	RJMP _0x88
                 _0x3D:
0003a3 91e0 0275 	LDS  R30,_cb_khoi_2_G000
0003a5 91f0 0276 	LDS  R31,_cb_khoi_2_G000+1
0003a7 9730      	SBIW R30,0
0003a8 f4b1      	BRNE _0x40
0003a9 940e 08e5 	CALL _lcd_clear
0003ab e0e0      	LDI  R30,LOW(0)
0003ac 93ea      	ST   -Y,R30
0003ad 93ea      	ST   -Y,R30
0003ae 940e 08d4 	CALL _lcd_gotoxy
                +
0003b0 e7e6     +LDI R30 , LOW ( _0x3E + ( 20 ) )
0003b1 e0f1     +LDI R31 , HIGH ( _0x3E + ( 20 ) )
                 	__POINTW1MN _0x3E,20
0003b2 93fa      	ST   -Y,R31
0003b3 93ea      	ST   -Y,R30
0003b4 940e 0921 	CALL _lcd_puts
0003b6 e0e0      	LDI  R30,LOW(0)
0003b7 93ea      	ST   -Y,R30
0003b8 e0e1      	LDI  R30,LOW(1)
0003b9 93ea      	ST   -Y,R30
0003ba 940e 08d4 	CALL _lcd_gotoxy
                +
0003bc e8e4     +LDI R30 , LOW ( _0x3E + ( 34 ) )
0003bd e0f1     +LDI R31 , HIGH ( _0x3E + ( 34 ) )
                 	__POINTW1MN _0x3E,34
0003be c027      	RJMP _0x88
                 _0x40:
0003bf 91e0 0271 	LDS  R30,_cb_Temp_G000
0003c1 91f0 0272 	LDS  R31,_cb_Temp_G000+1
0003c3 9730      	SBIW R30,0
0003c4 f061      	BREQ _0x43
0003c5 91e0 0277 	LDS  R30,_cb_anh_sang_1_G000
0003c7 91f0 0278 	LDS  R31,_cb_anh_sang_1_G000+1
0003c9 9730      	SBIW R30,0
0003ca f031      	BREQ _0x43
0003cb 91e0 0279 	LDS  R30,_cb_anh_sang_2_G000
0003cd 91f0 027a 	LDS  R31,_cb_anh_sang_2_G000+1
0003cf 9730      	SBIW R30,0
0003d0 f4c9      	BRNE _0x42
                 _0x43:
0003d1 940e 08e5 	CALL _lcd_clear
0003d3 e0e0      	LDI  R30,LOW(0)
0003d4 93ea      	ST   -Y,R30
0003d5 93ea      	ST   -Y,R30
0003d6 940e 08d4 	CALL _lcd_gotoxy
                +
0003d8 e8ea     +LDI R30 , LOW ( _0x3E + ( 40 ) )
0003d9 e0f1     +LDI R31 , HIGH ( _0x3E + ( 40 ) )
                 	__POINTW1MN _0x3E,40
0003da 93fa      	ST   -Y,R31
0003db 93ea      	ST   -Y,R30
0003dc 940e 0921 	CALL _lcd_puts
0003de e0e0      	LDI  R30,LOW(0)
0003df 93ea      	ST   -Y,R30
0003e0 e0e1      	LDI  R30,LOW(1)
0003e1 93ea      	ST   -Y,R30
0003e2 940e 08d4 	CALL _lcd_gotoxy
                +
0003e4 e9e3     +LDI R30 , LOW ( _0x3E + ( 49 ) )
0003e5 e0f1     +LDI R31 , HIGH ( _0x3E + ( 49 ) )
                 	__POINTW1MN _0x3E,49
                 _0x88:
0003e6 93fa      	ST   -Y,R31
0003e7 93ea      	ST   -Y,R30
0003e8 940e 0921 	CALL _lcd_puts
                 _0x42:
0003ea 9508      	RET
                 
                 	.DSEG
                 _0x3E:
000162           	.BYTE 0x3A
                 
                 	.CSEG
                 _dis_PC_parameter:
0003eb e3e1      	LDI  R30,LOW(_str)
0003ec e0f2      	LDI  R31,HIGH(_str)
0003ed 93fa      	ST   -Y,R31
0003ee 93ea      	ST   -Y,R30
                +
0003ef ebe4     +LDI R30 , LOW ( 2 * _0x0 + ( 50 ) )
0003f0 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 50 ) )
                 	__POINTW1FN _0x0,50
0003f1 93fa      	ST   -Y,R31
0003f2 93ea      	ST   -Y,R30
0003f3 e080      	LDI  R24,0
0003f4 940e 0b4d 	CALL _sprintf
0003f6 9624      	ADIW R28,4
0003f7 92da      	ST   -Y,R13
0003f8 92ca      	ST   -Y,R12
0003f9 929a      	ST   -Y,R9
0003fa 928a      	ST   -Y,R8
0003fb 940e 0b8b 	CALL _itoa
0003fd e4ef      	LDI  R30,LOW(_str1)
0003fe e0f2      	LDI  R31,HIGH(_str1)
0003ff 93fa      	ST   -Y,R31
000400 93ea      	ST   -Y,R30
000401 929a      	ST   -Y,R9
000402 928a      	ST   -Y,R8
000403 940e 0bc6 	CALL _strcpy
000405 81e0      	LD   R30,Z
000406 e3e1      	LDI  R30,LOW(_str)
000407 e0f2      	LDI  R31,HIGH(_str)
000408 93fa      	ST   -Y,R31
000409 93ea      	ST   -Y,R30
00040a e4ef      	LDI  R30,LOW(_str1)
00040b e0f2      	LDI  R31,HIGH(_str1)
00040c 93fa      	ST   -Y,R31
00040d 93ea      	ST   -Y,R30
00040e 940e 0bb7 	CALL _strcat
000410 e3e1      	LDI  R30,LOW(_str)
000411 e0f2      	LDI  R31,HIGH(_str)
000412 93fa      	ST   -Y,R31
000413 93ea      	ST   -Y,R30
000414 940e 0979 	CALL _puts
000416 e6e4      	LDI  R30,LOW(100)
000417 e0f0      	LDI  R31,HIGH(100)
000418 93fa      	ST   -Y,R31
000419 93ea      	ST   -Y,R30
00041a 940e 0ce2 	CALL _delay_ms
00041c e3e1      	LDI  R30,LOW(_str)
00041d e0f2      	LDI  R31,HIGH(_str)
00041e 93fa      	ST   -Y,R31
00041f 93ea      	ST   -Y,R30
                +
000420 ebe7     +LDI R30 , LOW ( 2 * _0x0 + ( 53 ) )
000421 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 53 ) )
                 	__POINTW1FN _0x0,53
000422 93fa      	ST   -Y,R31
000423 93ea      	ST   -Y,R30
000424 e080      	LDI  R24,0
000425 940e 0b4d 	CALL _sprintf
000427 9624      	ADIW R28,4
000428 91e0 0261 	LDS  R30,_anh_sang
00042a 91f0 0262 	LDS  R31,_anh_sang+1
00042c 93fa      	ST   -Y,R31
00042d 93ea      	ST   -Y,R30
00042e 929a      	ST   -Y,R9
00042f 928a      	ST   -Y,R8
000430 940e 0b8b 	CALL _itoa
000432 e4ef      	LDI  R30,LOW(_str1)
000433 e0f2      	LDI  R31,HIGH(_str1)
000434 93fa      	ST   -Y,R31
000435 93ea      	ST   -Y,R30
000436 929a      	ST   -Y,R9
000437 928a      	ST   -Y,R8
000438 c086      	RJMP _0x20E0006
                 _dis_PC_nguong:
000439 e3e1      	LDI  R30,LOW(_str)
00043a e0f2      	LDI  R31,HIGH(_str)
00043b 93fa      	ST   -Y,R31
00043c 93ea      	ST   -Y,R30
                +
00043d ebea     +LDI R30 , LOW ( 2 * _0x0 + ( 56 ) )
00043e e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 56 ) )
                 	__POINTW1FN _0x0,56
00043f 93fa      	ST   -Y,R31
000440 93ea      	ST   -Y,R30
000441 e080      	LDI  R24,0
000442 940e 0b4d 	CALL _sprintf
000444 9624      	ADIW R28,4
000445 91e0 026f 	LDS  R30,_Temp_0_G000
000447 91f0 0270 	LDS  R31,_Temp_0_G000+1
000449 93fa      	ST   -Y,R31
00044a 93ea      	ST   -Y,R30
00044b 92ba      	ST   -Y,R11
00044c 92aa      	ST   -Y,R10
00044d 940e 0b8b 	CALL _itoa
00044f e4ef      	LDI  R30,LOW(_str1)
000450 e0f2      	LDI  R31,HIGH(_str1)
000451 93fa      	ST   -Y,R31
000452 93ea      	ST   -Y,R30
000453 92ba      	ST   -Y,R11
000454 92aa      	ST   -Y,R10
000455 940e 0bc6 	CALL _strcpy
000457 81e0      	LD   R30,Z
000458 e3e1      	LDI  R30,LOW(_str)
000459 e0f2      	LDI  R31,HIGH(_str)
00045a 93fa      	ST   -Y,R31
00045b 93ea      	ST   -Y,R30
00045c e4ef      	LDI  R30,LOW(_str1)
00045d e0f2      	LDI  R31,HIGH(_str1)
00045e 93fa      	ST   -Y,R31
00045f 93ea      	ST   -Y,R30
000460 940e 0bb7 	CALL _strcat
000462 e3e1      	LDI  R30,LOW(_str)
000463 e0f2      	LDI  R31,HIGH(_str)
000464 93fa      	ST   -Y,R31
000465 93ea      	ST   -Y,R30
000466 940e 0979 	CALL _puts
000468 e6e4      	LDI  R30,LOW(100)
000469 e0f0      	LDI  R31,HIGH(100)
00046a 93fa      	ST   -Y,R31
00046b 93ea      	ST   -Y,R30
00046c 940e 0ce2 	CALL _delay_ms
00046e e3e1      	LDI  R30,LOW(_str)
00046f e0f2      	LDI  R31,HIGH(_str)
000470 93fa      	ST   -Y,R31
000471 93ea      	ST   -Y,R30
                +
000472 ece4     +LDI R30 , LOW ( 2 * _0x0 + ( 66 ) )
000473 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 66 ) )
                 	__POINTW1FN _0x0,66
000474 93fa      	ST   -Y,R31
000475 93ea      	ST   -Y,R30
000476 e080      	LDI  R24,0
000477 940e 0b4d 	CALL _sprintf
000479 9624      	ADIW R28,4
00047a 91e0 026b 	LDS  R30,_anh_sang_0_1_G000
00047c 91f0 026c 	LDS  R31,_anh_sang_0_1_G000+1
00047e 93fa      	ST   -Y,R31
00047f 93ea      	ST   -Y,R30
000480 92ba      	ST   -Y,R11
000481 92aa      	ST   -Y,R10
000482 940e 0b8b 	CALL _itoa
000484 e4ef      	LDI  R30,LOW(_str1)
000485 e0f2      	LDI  R31,HIGH(_str1)
000486 93fa      	ST   -Y,R31
000487 93ea      	ST   -Y,R30
000488 92ba      	ST   -Y,R11
000489 92aa      	ST   -Y,R10
00048a 940e 0bc6 	CALL _strcpy
00048c 81e0      	LD   R30,Z
00048d e3e1      	LDI  R30,LOW(_str)
00048e e0f2      	LDI  R31,HIGH(_str)
00048f 93fa      	ST   -Y,R31
000490 93ea      	ST   -Y,R30
000491 e4ef      	LDI  R30,LOW(_str1)
000492 e0f2      	LDI  R31,HIGH(_str1)
000493 93fa      	ST   -Y,R31
000494 93ea      	ST   -Y,R30
000495 940e 0bb7 	CALL _strcat
000497 e3e1      	LDI  R30,LOW(_str)
000498 e0f2      	LDI  R31,HIGH(_str)
000499 93fa      	ST   -Y,R31
00049a 93ea      	ST   -Y,R30
00049b 940e 0979 	CALL _puts
00049d e6e4      	LDI  R30,LOW(100)
00049e e0f0      	LDI  R31,HIGH(100)
00049f 93fa      	ST   -Y,R31
0004a0 93ea      	ST   -Y,R30
0004a1 940e 0ce2 	CALL _delay_ms
0004a3 e3e1      	LDI  R30,LOW(_str)
0004a4 e0f2      	LDI  R31,HIGH(_str)
0004a5 93fa      	ST   -Y,R31
0004a6 93ea      	ST   -Y,R30
                +
0004a7 ede0     +LDI R30 , LOW ( 2 * _0x0 + ( 78 ) )
0004a8 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 78 ) )
                 	__POINTW1FN _0x0,78
0004a9 93fa      	ST   -Y,R31
0004aa 93ea      	ST   -Y,R30
0004ab e080      	LDI  R24,0
0004ac 940e 0b4d 	CALL _sprintf
0004ae 9624      	ADIW R28,4
0004af 91e0 026d 	LDS  R30,_anh_sang_0_2_G000
0004b1 91f0 026e 	LDS  R31,_anh_sang_0_2_G000+1
0004b3 93fa      	ST   -Y,R31
0004b4 93ea      	ST   -Y,R30
0004b5 92ba      	ST   -Y,R11
0004b6 92aa      	ST   -Y,R10
0004b7 940e 0b8b 	CALL _itoa
0004b9 e4ef      	LDI  R30,LOW(_str1)
0004ba e0f2      	LDI  R31,HIGH(_str1)
0004bb 93fa      	ST   -Y,R31
0004bc 93ea      	ST   -Y,R30
0004bd 92ba      	ST   -Y,R11
0004be 92aa      	ST   -Y,R10
                 _0x20E0006:
0004bf 940e 0bc6 	CALL _strcpy
0004c1 81e0      	LD   R30,Z
0004c2 e3e1      	LDI  R30,LOW(_str)
0004c3 e0f2      	LDI  R31,HIGH(_str)
0004c4 93fa      	ST   -Y,R31
0004c5 93ea      	ST   -Y,R30
0004c6 e4ef      	LDI  R30,LOW(_str1)
0004c7 e0f2      	LDI  R31,HIGH(_str1)
0004c8 93fa      	ST   -Y,R31
0004c9 93ea      	ST   -Y,R30
0004ca 940e 0bb7 	CALL _strcat
0004cc e3e1      	LDI  R30,LOW(_str)
0004cd e0f2      	LDI  R31,HIGH(_str)
0004ce 93fa      	ST   -Y,R31
0004cf 93ea      	ST   -Y,R30
0004d0 940e 0979 	CALL _puts
0004d2 e6e4      	LDI  R30,LOW(100)
0004d3 e0f0      	LDI  R31,HIGH(100)
0004d4 93fa      	ST   -Y,R31
0004d5 93ea      	ST   -Y,R30
0004d6 940e 0ce2 	CALL _delay_ms
0004d8 9508      	RET
                 _dis_PC_cb:
0004d9 91e0 026f 	LDS  R30,_Temp_0_G000
0004db 91f0 0270 	LDS  R31,_Temp_0_G000+1
0004dd 15ec      	CP   R30,R12
0004de 05fd      	CPC  R31,R13
0004df f438      	BRSH _0x45
0004e0 e3e1      	LDI  R30,LOW(_str)
0004e1 e0f2      	LDI  R31,HIGH(_str)
0004e2 93fa      	ST   -Y,R31
0004e3 93ea      	ST   -Y,R30
                +
0004e4 edec     +LDI R30 , LOW ( 2 * _0x0 + ( 90 ) )
0004e5 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 90 ) )
                 	__POINTW1FN _0x0,90
0004e6 c006      	RJMP _0x89
                 _0x45:
0004e7 e3e1      	LDI  R30,LOW(_str)
0004e8 e0f2      	LDI  R31,HIGH(_str)
0004e9 93fa      	ST   -Y,R31
0004ea 93ea      	ST   -Y,R30
                +
0004eb eee0     +LDI R30 , LOW ( 2 * _0x0 + ( 94 ) )
0004ec e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 94 ) )
                 	__POINTW1FN _0x0,94
                 _0x89:
0004ed 93fa      	ST   -Y,R31
0004ee 93ea      	ST   -Y,R30
0004ef e080      	LDI  R24,0
0004f0 940e 0b4d 	CALL _sprintf
0004f2 9624      	ADIW R28,4
0004f3 e3e1      	LDI  R30,LOW(_str)
0004f4 e0f2      	LDI  R31,HIGH(_str)
0004f5 93fa      	ST   -Y,R31
0004f6 93ea      	ST   -Y,R30
0004f7 940e 0979 	CALL _puts
0004f9 ece8      	LDI  R30,LOW(200)
0004fa e0f0      	LDI  R31,HIGH(200)
0004fb 93fa      	ST   -Y,R31
0004fc 93ea      	ST   -Y,R30
0004fd 940e 0ce2 	CALL _delay_ms
0004ff 91e0 0261 	LDS  R30,_anh_sang
000501 91f0 0262 	LDS  R31,_anh_sang+1
000503 91a0 026b 	LDS  R26,_anh_sang_0_1_G000
000505 91b0 026c 	LDS  R27,_anh_sang_0_1_G000+1
000507 17ae      	CP   R26,R30
000508 07bf      	CPC  R27,R31
000509 f458      	BRSH _0x48
00050a 91e0 026d 	LDS  R30,_anh_sang_0_2_G000
00050c 91f0 026e 	LDS  R31,_anh_sang_0_2_G000+1
00050e 91a0 0261 	LDS  R26,_anh_sang
000510 91b0 0262 	LDS  R27,_anh_sang+1
000512 17ae      	CP   R26,R30
000513 07bf      	CPC  R27,R31
000514 f008      	BRLO _0x49
                 _0x48:
000515 c007      	RJMP _0x47
                 _0x49:
000516 e3e1      	LDI  R30,LOW(_str)
000517 e0f2      	LDI  R31,HIGH(_str)
000518 93fa      	ST   -Y,R31
000519 93ea      	ST   -Y,R30
                +
00051a eee4     +LDI R30 , LOW ( 2 * _0x0 + ( 98 ) )
00051b e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 98 ) )
                 	__POINTW1FN _0x0,98
00051c c006      	RJMP _0x8A
                 _0x47:
00051d e3e1      	LDI  R30,LOW(_str)
00051e e0f2      	LDI  R31,HIGH(_str)
00051f 93fa      	ST   -Y,R31
000520 93ea      	ST   -Y,R30
                +
000521 eee8     +LDI R30 , LOW ( 2 * _0x0 + ( 102 ) )
000522 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 102 ) )
                 	__POINTW1FN _0x0,102
                 _0x8A:
000523 93fa      	ST   -Y,R31
000524 93ea      	ST   -Y,R30
000525 e080      	LDI  R24,0
000526 940e 0b4d 	CALL _sprintf
000528 9624      	ADIW R28,4
000529 e3e1      	LDI  R30,LOW(_str)
00052a e0f2      	LDI  R31,HIGH(_str)
00052b 93fa      	ST   -Y,R31
00052c 93ea      	ST   -Y,R30
00052d 940e 0979 	CALL _puts
00052f ece8      	LDI  R30,LOW(200)
000530 e0f0      	LDI  R31,HIGH(200)
000531 93fa      	ST   -Y,R31
000532 93ea      	ST   -Y,R30
000533 940e 0ce2 	CALL _delay_ms
000535 91e0 0267 	LDS  R30,_khoi_0_1_G000
000537 91f0 0268 	LDS  R31,_khoi_0_1_G000+1
000539 91a0 025f 	LDS  R26,_khoi
00053b 91b0 0260 	LDS  R27,_khoi+1
00053d 17ea      	CP   R30,R26
00053e 07fb      	CPC  R31,R27
00053f f438      	BRSH _0x4C
000540 91e0 0269 	LDS  R30,_khoi_0_2_G000
000542 91f0 026a 	LDS  R31,_khoi_0_2_G000+1
000544 17ae      	CP   R26,R30
000545 07bf      	CPC  R27,R31
000546 f008      	BRLO _0x4D
                 _0x4C:
000547 c007      	RJMP _0x4B
                 _0x4D:
000548 e3e1      	LDI  R30,LOW(_str)
000549 e0f2      	LDI  R31,HIGH(_str)
00054a 93fa      	ST   -Y,R31
00054b 93ea      	ST   -Y,R30
                +
00054c eeec     +LDI R30 , LOW ( 2 * _0x0 + ( 106 ) )
00054d e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 106 ) )
                 	__POINTW1FN _0x0,106
00054e c018      	RJMP _0x8B
                 _0x4B:
00054f 91e0 0269 	LDS  R30,_khoi_0_2_G000
000551 91f0 026a 	LDS  R31,_khoi_0_2_G000+1
000553 91a0 025f 	LDS  R26,_khoi
000555 91b0 0260 	LDS  R27,_khoi+1
000557 17ae      	CP   R26,R30
000558 07bf      	CPC  R27,R31
000559 f038      	BRLO _0x4F
00055a e3e1      	LDI  R30,LOW(_str)
00055b e0f2      	LDI  R31,HIGH(_str)
00055c 93fa      	ST   -Y,R31
00055d 93ea      	ST   -Y,R30
                +
00055e efe2     +LDI R30 , LOW ( 2 * _0x0 + ( 112 ) )
00055f e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 112 ) )
                 	__POINTW1FN _0x0,112
000560 c006      	RJMP _0x8B
                 _0x4F:
000561 e3e1      	LDI  R30,LOW(_str)
000562 e0f2      	LDI  R31,HIGH(_str)
000563 93fa      	ST   -Y,R31
000564 93ea      	ST   -Y,R30
                +
000565 efe8     +LDI R30 , LOW ( 2 * _0x0 + ( 118 ) )
000566 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 118 ) )
                 	__POINTW1FN _0x0,118
                 _0x8B:
000567 93fa      	ST   -Y,R31
000568 93ea      	ST   -Y,R30
000569 e080      	LDI  R24,0
00056a 940e 0b4d 	CALL _sprintf
00056c 9624      	ADIW R28,4
00056d e3e1      	LDI  R30,LOW(_str)
00056e e0f2      	LDI  R31,HIGH(_str)
00056f 93fa      	ST   -Y,R31
000570 93ea      	ST   -Y,R30
000571 940e 0979 	CALL _puts
000573 ece8      	LDI  R30,LOW(200)
000574 e0f0      	LDI  R31,HIGH(200)
000575 93fa      	ST   -Y,R31
000576 93ea      	ST   -Y,R30
000577 940e 0ce2 	CALL _delay_ms
000579 9508      	RET
                 _control:
00057a 91e0 0271 	LDS  R30,_cb_Temp_G000
00057c 91f0 0272 	LDS  R31,_cb_Temp_G000+1
00057e 9730      	SBIW R30,0
00057f f409      	BRNE _0x51
000580 9ac0      	SBI  0x18,0
                 _0x51:
000581 91a0 0271 	LDS  R26,_cb_Temp_G000
000583 91b0 0272 	LDS  R27,_cb_Temp_G000+1
000585 9711      	SBIW R26,1
000586 f409      	BRNE _0x52
000587 98c0      	CBI  0x18,0
                 _0x52:
000588 91e0 026b 	LDS  R30,_anh_sang_0_1_G000
00058a 91f0 026c 	LDS  R31,_anh_sang_0_1_G000+1
00058c 91a0 0261 	LDS  R26,_anh_sang
00058e 91b0 0262 	LDS  R27,_anh_sang+1
000590 17ae      	CP   R26,R30
000591 07bf      	CPC  R27,R31
000592 f410      	BRSH _0x53
000593 9ac1      	SBI  0x18,1
000594 c001      	RJMP _0x54
                 _0x53:
000595 98c1      	CBI  0x18,1
                 _0x54:
000596 e0ea      	LDI  R30,LOW(10)
000597 e0f0      	LDI  R31,HIGH(10)
000598 93fa      	ST   -Y,R31
000599 93ea      	ST   -Y,R30
00059a 940e 0ce2 	CALL _delay_ms
00059c 91e0 0273 	LDS  R30,_cb_khoi_1_G000
00059e 91f0 0274 	LDS  R31,_cb_khoi_1_G000+1
0005a0 9730      	SBIW R30,0
0005a1 f409      	BRNE _0x55
0005a2 9ac7      	SBI  0x18,7
                 _0x55:
0005a3 91e0 0275 	LDS  R30,_cb_khoi_2_G000
0005a5 91f0 0276 	LDS  R31,_cb_khoi_2_G000+1
0005a7 9730      	SBIW R30,0
0005a8 f4e9      	BRNE _0x56
0005a9 9722      	SBIW R28,2
                 ;	i -> Y+0
0005aa e0e0      	LDI  R30,LOW(0)
0005ab 83e8      	STD  Y+0,R30
0005ac 83e9      	STD  Y+0+1,R30
                 _0x58:
0005ad 81a8      	LD   R26,Y
0005ae 81b9      	LDD  R27,Y+1
0005af 971a      	SBIW R26,10
0005b0 f4a0      	BRSH _0x59
0005b1 9ac7      	SBI  0x18,7
0005b2 e3e2      	LDI  R30,LOW(50)
0005b3 e0f0      	LDI  R31,HIGH(50)
0005b4 93fa      	ST   -Y,R31
0005b5 93ea      	ST   -Y,R30
0005b6 940e 0ce2 	CALL _delay_ms
0005b8 98c7      	CBI  0x18,7
0005b9 e3e2      	LDI  R30,LOW(50)
0005ba e0f0      	LDI  R31,HIGH(50)
0005bb 93fa      	ST   -Y,R31
0005bc 93ea      	ST   -Y,R30
0005bd 940e 0ce2 	CALL _delay_ms
0005bf 81e8      	LD   R30,Y
0005c0 81f9      	LDD  R31,Y+1
0005c1 9631      	ADIW R30,1
0005c2 83e8      	ST   Y,R30
0005c3 83f9      	STD  Y+1,R31
0005c4 cfe8      	RJMP _0x58
                 _0x59:
0005c5 9622      	ADIW R28,2
                 _0x56:
0005c6 91a0 0273 	LDS  R26,_cb_khoi_1_G000
0005c8 91b0 0274 	LDS  R27,_cb_khoi_1_G000+1
0005ca 9711      	SBIW R26,1
0005cb f431      	BRNE _0x5B
0005cc 91a0 0275 	LDS  R26,_cb_khoi_2_G000
0005ce 91b0 0276 	LDS  R27,_cb_khoi_2_G000+1
0005d0 9711      	SBIW R26,1
0005d1 f009      	BREQ _0x5C
                 _0x5B:
0005d2 c001      	RJMP _0x5A
                 _0x5C:
0005d3 98c7      	CBI  0x18,7
                 _0x5A:
0005d4 9508      	RET
                 ;	*str -> Y+6
                 ;	index -> Y+4
                 ;	i -> Y+2
                 ;	nn -> Y+0
                 ;	*str -> Y+6
                 ;	index -> Y+4
                 ;	nn -> Y+2
                 ;	i -> Y+0
                 ;unsigned int mode2;
                 ;// External Interrupt 2 service routine
                 ;interrupt [EXT_INT2] void ext_int2_isr(void)
                 ; 0000 0005 {
                 _ext_int2_isr:
0005d5 920a      	ST   -Y,R0
0005d6 921a      	ST   -Y,R1
0005d7 92fa      	ST   -Y,R15
0005d8 936a      	ST   -Y,R22
0005d9 937a      	ST   -Y,R23
0005da 938a      	ST   -Y,R24
0005db 939a      	ST   -Y,R25
0005dc 93aa      	ST   -Y,R26
0005dd 93ba      	ST   -Y,R27
0005de 93ea      	ST   -Y,R30
0005df 93fa      	ST   -Y,R31
0005e0 b7ef      	IN   R30,SREG
0005e1 93ea      	ST   -Y,R30
                 ; 0000 0006     delay_ms(200);
0005e2 ece8      	LDI  R30,LOW(200)
0005e3 e0f0      	LDI  R31,HIGH(200)
0005e4 93fa      	ST   -Y,R31
0005e5 93ea      	ST   -Y,R30
0005e6 940e 0ce2 	CALL _delay_ms
                 ; 0000 0007     if(!(PINB & 0x04)){
0005e8 99b2      	SBIC 0x16,2
0005e9 c008      	RJMP _0x67
                 ; 0000 0008         mode1++;   // mode1 tang 1 dv sau moi lan bam
0005ea e8a5      	LDI  R26,LOW(_mode1)
0005eb e0b2      	LDI  R27,HIGH(_mode1)
0005ec 91ed      	LD   R30,X+
0005ed 91fd      	LD   R31,X+
0005ee 9631      	ADIW R30,1
0005ef 93fe      	ST   -X,R31
0005f0 93ee      	ST   -X,R30
0005f1 9731      	SBIW R30,1
                 ; 0000 0009     }
                 ; 0000 000A 
                 ; 0000 000B     mode2 = mode1;
                 _0x67:
0005f2 91e0 0285 	LDS  R30,_mode1
0005f4 91f0 0286 	LDS  R31,_mode1+1
0005f6 93e0 0295 	STS  _mode2,R30
0005f8 93f0 0296 	STS  _mode2+1,R31
                 ; 0000 000C     if (mode1 == 8) mode1 = 0;
0005fa 91a0 0285 	LDS  R26,_mode1
0005fc 91b0 0286 	LDS  R27,_mode1+1
0005fe 9718      	SBIW R26,8
0005ff f429      	BRNE _0x68
000600 e0e0      	LDI  R30,LOW(0)
000601 93e0 0285 	STS  _mode1,R30
000603 93e0 0286 	STS  _mode1+1,R30
                 ; 0000 000D }
                 _0x68:
000605 91e9      	LD   R30,Y+
000606 bfef      	OUT  SREG,R30
000607 91f9      	LD   R31,Y+
000608 91e9      	LD   R30,Y+
000609 91b9      	LD   R27,Y+
00060a 91a9      	LD   R26,Y+
00060b 9199      	LD   R25,Y+
00060c 9189      	LD   R24,Y+
00060d 9179      	LD   R23,Y+
00060e 9169      	LD   R22,Y+
00060f 90f9      	LD   R15,Y+
000610 9019      	LD   R1,Y+
000611 9009      	LD   R0,Y+
000612 9518      	RETI
                 ;void set_nguong(){
                 ; 0000 000E void set_nguong(){
                 _set_nguong:
                 ; 0000 000F     // kiem tra gia tri mode 1 va set cac gia tri nguong
                 ; 0000 0010     /* thuc hien dieu khien: khi nhan button
                 ; 0000 0011     - lan 1: dieu khien nhiet do
                 ; 0000 0012         + up: tang nhiet do nguong
                 ; 0000 0013         + down: giam nhiet do nguong
                 ; 0000 0014         + mode1 = 1
                 ; 0000 0015     - lan 2: dieu khien anh sang : mode1 = 2
                 ; 0000 0016     - lan 3: dieu khien bao chay : mode1  = 3
                 ; 0000 0017     - lan 4: quay ve che do hien thi trang thai
                 ; 0000 0018     */
                 ; 0000 0019     if (mode1 == 1){
000613 91a0 0285 	LDS  R26,_mode1
000615 91b0 0286 	LDS  R27,_mode1+1
000617 9711      	SBIW R26,1
000618 f5a1      	BRNE _0x69
                 ; 0000 001A         but_ton_nhiet();
000619 dbe5      	RCALL _but_ton_nhiet
                 ; 0000 001B         Temp_0 = nguong_nhiet;
00061a 91e0 028f 	LDS  R30,_nguong_nhiet
00061c 91f0 0290 	LDS  R31,_nguong_nhiet+1
00061e 93e0 026f 	STS  _Temp_0_G000,R30
000620 93f0 0270 	STS  _Temp_0_G000+1,R31
                 ; 0000 001C         lcd_gotoxy(0,0);
000622 e0e0      	LDI  R30,LOW(0)
000623 93ea      	ST   -Y,R30
000624 93ea      	ST   -Y,R30
000625 940e 08d4 	CALL _lcd_gotoxy
                 ; 0000 001D         lcd_puts("NHIET DO:");
                +
000627 e9ec     +LDI R30 , LOW ( _0x6A + ( 0 ) )
000628 e0f1     +LDI R31 , HIGH ( _0x6A + ( 0 ) )
                 	__POINTW1MN _0x6A,0
000629 93fa      	ST   -Y,R31
00062a 93ea      	ST   -Y,R30
00062b 940e 0921 	CALL _lcd_puts
                 ; 0000 001E         sprintf(LCD_Buffer,"NGUONG : %4i",Temp_0);
00062d e4e0      	LDI  R30,LOW(_LCD_Buffer)
00062e e0f2      	LDI  R31,HIGH(_LCD_Buffer)
00062f 93fa      	ST   -Y,R31
000630 93ea      	ST   -Y,R30
                +
000631 e0e6     +LDI R30 , LOW ( 2 * _0x0 + ( 132 ) )
000632 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 132 ) )
                 	__POINTW1FN _0x0,132
000633 93fa      	ST   -Y,R31
000634 93ea      	ST   -Y,R30
000635 91e0 026f 	LDS  R30,_Temp_0_G000
000637 91f0 0270 	LDS  R31,_Temp_0_G000+1
000639 2766      	CLR  R22
00063a 2777      	CLR  R23
00063b 940e 0e61 	CALL __PUTPARD1
00063d e084      	LDI  R24,4
00063e 940e 0b4d 	CALL _sprintf
000640 9628      	ADIW R28,8
                 ; 0000 001F         lcd_gotoxy(0,1);
000641 e0e0      	LDI  R30,LOW(0)
000642 93ea      	ST   -Y,R30
000643 e0e1      	LDI  R30,LOW(1)
000644 93ea      	ST   -Y,R30
000645 940e 08d4 	CALL _lcd_gotoxy
                 ; 0000 0020         lcd_puts(LCD_Buffer);
000647 e4e0      	LDI  R30,LOW(_LCD_Buffer)
000648 e0f2      	LDI  R31,HIGH(_LCD_Buffer)
000649 93fa      	ST   -Y,R31
00064a 93ea      	ST   -Y,R30
00064b 940e 0921 	CALL _lcd_puts
                 ; 0000 0021 
                 ; 0000 0022     }
                 ; 0000 0023 
                 ; 0000 0024     if (mode1 == 4){
                 _0x69:
00064d 91a0 0285 	LDS  R26,_mode1
00064f 91b0 0286 	LDS  R27,_mode1+1
000651 9714      	SBIW R26,4
000652 f5a1      	BRNE _0x6B
                 ; 0000 0025         but_ton_khoi_1();
000653 db2f      	RCALL _but_ton_khoi_1
                 ; 0000 0026         khoi_0_1 = nguong_khoi_1;
000654 91e0 0287 	LDS  R30,_nguong_khoi_1
000656 91f0 0288 	LDS  R31,_nguong_khoi_1+1
000658 93e0 0267 	STS  _khoi_0_1_G000,R30
00065a 93f0 0268 	STS  _khoi_0_1_G000+1,R31
                 ; 0000 0027         lcd_gotoxy(0,0);
00065c e0e0      	LDI  R30,LOW(0)
00065d 93ea      	ST   -Y,R30
00065e 93ea      	ST   -Y,R30
00065f 940e 08d4 	CALL _lcd_gotoxy
                 ; 0000 0028         lcd_puts("CANH BAO CHAY:");
                +
000661 eae6     +LDI R30 , LOW ( _0x6A + ( 10 ) )
000662 e0f1     +LDI R31 , HIGH ( _0x6A + ( 10 ) )
                 	__POINTW1MN _0x6A,10
000663 93fa      	ST   -Y,R31
000664 93ea      	ST   -Y,R30
000665 940e 0921 	CALL _lcd_puts
                 ; 0000 0029         sprintf(LCD_Buffer,"NGUONG 1 : %4i",khoi_0_1);
000667 e4e0      	LDI  R30,LOW(_LCD_Buffer)
000668 e0f2      	LDI  R31,HIGH(_LCD_Buffer)
000669 93fa      	ST   -Y,R31
00066a 93ea      	ST   -Y,R30
                +
00066b e2e2     +LDI R30 , LOW ( 2 * _0x0 + ( 160 ) )
00066c e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 160 ) )
                 	__POINTW1FN _0x0,160
00066d 93fa      	ST   -Y,R31
00066e 93ea      	ST   -Y,R30
00066f 91e0 0267 	LDS  R30,_khoi_0_1_G000
000671 91f0 0268 	LDS  R31,_khoi_0_1_G000+1
000673 2766      	CLR  R22
000674 2777      	CLR  R23
000675 940e 0e61 	CALL __PUTPARD1
000677 e084      	LDI  R24,4
000678 940e 0b4d 	CALL _sprintf
00067a 9628      	ADIW R28,8
                 ; 0000 002A         lcd_gotoxy(0,1);
00067b e0e0      	LDI  R30,LOW(0)
00067c 93ea      	ST   -Y,R30
00067d e0e1      	LDI  R30,LOW(1)
00067e 93ea      	ST   -Y,R30
00067f 940e 08d4 	CALL _lcd_gotoxy
                 ; 0000 002B         lcd_puts(LCD_Buffer);
000681 e4e0      	LDI  R30,LOW(_LCD_Buffer)
000682 e0f2      	LDI  R31,HIGH(_LCD_Buffer)
000683 93fa      	ST   -Y,R31
000684 93ea      	ST   -Y,R30
000685 940e 0921 	CALL _lcd_puts
                 ; 0000 002C     }
                 ; 0000 002D 
                 ; 0000 002E     if (mode1 == 5){
                 _0x6B:
000687 91a0 0285 	LDS  R26,_mode1
000689 91b0 0286 	LDS  R27,_mode1+1
00068b 9715      	SBIW R26,5
00068c f5a1      	BRNE _0x6C
                 ; 0000 002F         but_ton_khoi_2();
00068d db33      	RCALL _but_ton_khoi_2
                 ; 0000 0030         khoi_0_2 = nguong_khoi_2;
00068e 91e0 0289 	LDS  R30,_nguong_khoi_2
000690 91f0 028a 	LDS  R31,_nguong_khoi_2+1
000692 93e0 0269 	STS  _khoi_0_2_G000,R30
000694 93f0 026a 	STS  _khoi_0_2_G000+1,R31
                 ; 0000 0031         lcd_gotoxy(0,0);
000696 e0e0      	LDI  R30,LOW(0)
000697 93ea      	ST   -Y,R30
000698 93ea      	ST   -Y,R30
000699 940e 08d4 	CALL _lcd_gotoxy
                 ; 0000 0032         lcd_puts("CANH BAO CHAY:");
                +
00069b ebe5     +LDI R30 , LOW ( _0x6A + ( 25 ) )
00069c e0f1     +LDI R31 , HIGH ( _0x6A + ( 25 ) )
                 	__POINTW1MN _0x6A,25
00069d 93fa      	ST   -Y,R31
00069e 93ea      	ST   -Y,R30
00069f 940e 0921 	CALL _lcd_puts
                 ; 0000 0033         sprintf(LCD_Buffer,"NGUONG 2 : %4i",khoi_0_2);
0006a1 e4e0      	LDI  R30,LOW(_LCD_Buffer)
0006a2 e0f2      	LDI  R31,HIGH(_LCD_Buffer)
0006a3 93fa      	ST   -Y,R31
0006a4 93ea      	ST   -Y,R30
                +
0006a5 e3e1     +LDI R30 , LOW ( 2 * _0x0 + ( 175 ) )
0006a6 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 175 ) )
                 	__POINTW1FN _0x0,175
0006a7 93fa      	ST   -Y,R31
0006a8 93ea      	ST   -Y,R30
0006a9 91e0 0269 	LDS  R30,_khoi_0_2_G000
0006ab 91f0 026a 	LDS  R31,_khoi_0_2_G000+1
0006ad 2766      	CLR  R22
0006ae 2777      	CLR  R23
0006af 940e 0e61 	CALL __PUTPARD1
0006b1 e084      	LDI  R24,4
0006b2 940e 0b4d 	CALL _sprintf
0006b4 9628      	ADIW R28,8
                 ; 0000 0034         lcd_gotoxy(0,1);
0006b5 e0e0      	LDI  R30,LOW(0)
0006b6 93ea      	ST   -Y,R30
0006b7 e0e1      	LDI  R30,LOW(1)
0006b8 93ea      	ST   -Y,R30
0006b9 940e 08d4 	CALL _lcd_gotoxy
                 ; 0000 0035         lcd_puts(LCD_Buffer);
0006bb e4e0      	LDI  R30,LOW(_LCD_Buffer)
0006bc e0f2      	LDI  R31,HIGH(_LCD_Buffer)
0006bd 93fa      	ST   -Y,R31
0006be 93ea      	ST   -Y,R30
0006bf 940e 0921 	CALL _lcd_puts
                 ; 0000 0036 
                 ; 0000 0037     }
                 ; 0000 0038 
                 ; 0000 0039     if (mode1 == 2){
                 _0x6C:
0006c1 91a0 0285 	LDS  R26,_mode1
0006c3 91b0 0286 	LDS  R27,_mode1+1
0006c5 9712      	SBIW R26,2
0006c6 f5a1      	BRNE _0x6D
                 ; 0000 003A         but_ton_as_1();
0006c7 db75      	RCALL _but_ton_as_1
                 ; 0000 003B         anh_sang_0_1 = nguong_as_1;
0006c8 91e0 028b 	LDS  R30,_nguong_as_1
0006ca 91f0 028c 	LDS  R31,_nguong_as_1+1
0006cc 93e0 026b 	STS  _anh_sang_0_1_G000,R30
0006ce 93f0 026c 	STS  _anh_sang_0_1_G000+1,R31
                 ; 0000 003C         lcd_gotoxy(0,0);
0006d0 e0e0      	LDI  R30,LOW(0)
0006d1 93ea      	ST   -Y,R30
0006d2 93ea      	ST   -Y,R30
0006d3 940e 08d4 	CALL _lcd_gotoxy
                 ; 0000 003D         lcd_puts("ANH SANG:");
                +
0006d5 ece4     +LDI R30 , LOW ( _0x6A + ( 40 ) )
0006d6 e0f1     +LDI R31 , HIGH ( _0x6A + ( 40 ) )
                 	__POINTW1MN _0x6A,40
0006d7 93fa      	ST   -Y,R31
0006d8 93ea      	ST   -Y,R30
0006d9 940e 0921 	CALL _lcd_puts
                 ; 0000 003E         sprintf(LCD_Buffer,"NGUONG 1: %4i",anh_sang_0_1);
0006db e4e0      	LDI  R30,LOW(_LCD_Buffer)
0006dc e0f2      	LDI  R31,HIGH(_LCD_Buffer)
0006dd 93fa      	ST   -Y,R31
0006de 93ea      	ST   -Y,R30
                +
0006df e4ea     +LDI R30 , LOW ( 2 * _0x0 + ( 200 ) )
0006e0 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 200 ) )
                 	__POINTW1FN _0x0,200
0006e1 93fa      	ST   -Y,R31
0006e2 93ea      	ST   -Y,R30
0006e3 91e0 026b 	LDS  R30,_anh_sang_0_1_G000
0006e5 91f0 026c 	LDS  R31,_anh_sang_0_1_G000+1
0006e7 2766      	CLR  R22
0006e8 2777      	CLR  R23
0006e9 940e 0e61 	CALL __PUTPARD1
0006eb e084      	LDI  R24,4
0006ec 940e 0b4d 	CALL _sprintf
0006ee 9628      	ADIW R28,8
                 ; 0000 003F         lcd_gotoxy(0,1);
0006ef e0e0      	LDI  R30,LOW(0)
0006f0 93ea      	ST   -Y,R30
0006f1 e0e1      	LDI  R30,LOW(1)
0006f2 93ea      	ST   -Y,R30
0006f3 940e 08d4 	CALL _lcd_gotoxy
                 ; 0000 0040         lcd_puts(LCD_Buffer);
0006f5 e4e0      	LDI  R30,LOW(_LCD_Buffer)
0006f6 e0f2      	LDI  R31,HIGH(_LCD_Buffer)
0006f7 93fa      	ST   -Y,R31
0006f8 93ea      	ST   -Y,R30
0006f9 940e 0921 	CALL _lcd_puts
                 ; 0000 0041     }
                 ; 0000 0042     if (mode1 == 3){
                 _0x6D:
0006fb 91a0 0285 	LDS  R26,_mode1
0006fd 91b0 0286 	LDS  R27,_mode1+1
0006ff 9713      	SBIW R26,3
000700 f5a1      	BRNE _0x6E
                 ; 0000 0043         but_ton_as_2();
000701 db79      	RCALL _but_ton_as_2
                 ; 0000 0044         anh_sang_0_2 = nguong_as_2;
000702 91e0 028d 	LDS  R30,_nguong_as_2
000704 91f0 028e 	LDS  R31,_nguong_as_2+1
000706 93e0 026d 	STS  _anh_sang_0_2_G000,R30
000708 93f0 026e 	STS  _anh_sang_0_2_G000+1,R31
                 ; 0000 0045         lcd_gotoxy(0,0);
00070a e0e0      	LDI  R30,LOW(0)
00070b 93ea      	ST   -Y,R30
00070c 93ea      	ST   -Y,R30
00070d 940e 08d4 	CALL _lcd_gotoxy
                 ; 0000 0046         lcd_puts("ANH SANG:");
                +
00070f ecee     +LDI R30 , LOW ( _0x6A + ( 50 ) )
000710 e0f1     +LDI R31 , HIGH ( _0x6A + ( 50 ) )
                 	__POINTW1MN _0x6A,50
000711 93fa      	ST   -Y,R31
000712 93ea      	ST   -Y,R30
000713 940e 0921 	CALL _lcd_puts
                 ; 0000 0047         sprintf(LCD_Buffer,"NGUONG 2: %4i",anh_sang_0_2);
000715 e4e0      	LDI  R30,LOW(_LCD_Buffer)
000716 e0f2      	LDI  R31,HIGH(_LCD_Buffer)
000717 93fa      	ST   -Y,R31
000718 93ea      	ST   -Y,R30
                +
000719 e5e8     +LDI R30 , LOW ( 2 * _0x0 + ( 214 ) )
00071a e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 214 ) )
                 	__POINTW1FN _0x0,214
00071b 93fa      	ST   -Y,R31
00071c 93ea      	ST   -Y,R30
00071d 91e0 026d 	LDS  R30,_anh_sang_0_2_G000
00071f 91f0 026e 	LDS  R31,_anh_sang_0_2_G000+1
000721 2766      	CLR  R22
000722 2777      	CLR  R23
000723 940e 0e61 	CALL __PUTPARD1
000725 e084      	LDI  R24,4
000726 940e 0b4d 	CALL _sprintf
000728 9628      	ADIW R28,8
                 ; 0000 0048         lcd_gotoxy(0,1);
000729 e0e0      	LDI  R30,LOW(0)
00072a 93ea      	ST   -Y,R30
00072b e0e1      	LDI  R30,LOW(1)
00072c 93ea      	ST   -Y,R30
00072d 940e 08d4 	CALL _lcd_gotoxy
                 ; 0000 0049         lcd_puts(LCD_Buffer);
00072f e4e0      	LDI  R30,LOW(_LCD_Buffer)
000730 e0f2      	LDI  R31,HIGH(_LCD_Buffer)
000731 93fa      	ST   -Y,R31
000732 93ea      	ST   -Y,R30
000733 940e 0921 	CALL _lcd_puts
                 ; 0000 004A     }
                 ; 0000 004B 
                 ; 0000 004C     if (mode1 == 6){
                 _0x6E:
000735 91a0 0285 	LDS  R26,_mode1
000737 91b0 0286 	LDS  R27,_mode1+1
000739 9716      	SBIW R26,6
00073a f541      	BRNE _0x6F
                 ; 0000 004D         lcd_clear();
00073b 940e 08e5 	CALL _lcd_clear
                 ; 0000 004E         lcd_gotoxy(0,0);
00073d e0e0      	LDI  R30,LOW(0)
00073e 93ea      	ST   -Y,R30
00073f 93ea      	ST   -Y,R30
000740 940e 08d4 	CALL _lcd_gotoxy
                 ; 0000 004F         lcd_puts("WAITING FOR");
                +
000742 ede8     +LDI R30 , LOW ( _0x6A + ( 60 ) )
000743 e0f1     +LDI R31 , HIGH ( _0x6A + ( 60 ) )
                 	__POINTW1MN _0x6A,60
000744 93fa      	ST   -Y,R31
000745 93ea      	ST   -Y,R30
000746 940e 0921 	CALL _lcd_puts
                 ; 0000 0050         lcd_gotoxy(0,1);
000748 e0e0      	LDI  R30,LOW(0)
000749 93ea      	ST   -Y,R30
00074a e0e1      	LDI  R30,LOW(1)
00074b 93ea      	ST   -Y,R30
00074c 940e 08d4 	CALL _lcd_gotoxy
                 ; 0000 0051         lcd_puts("SETTING UP");
                +
00074e eee4     +LDI R30 , LOW ( _0x6A + ( 72 ) )
00074f e0f1     +LDI R31 , HIGH ( _0x6A + ( 72 ) )
                 	__POINTW1MN _0x6A,72
000750 93fa      	ST   -Y,R31
000751 93ea      	ST   -Y,R30
000752 940e 0921 	CALL _lcd_puts
                 ; 0000 0052         delay_ms(3000);
000754 ebe8      	LDI  R30,LOW(3000)
000755 e0fb      	LDI  R31,HIGH(3000)
000756 93fa      	ST   -Y,R31
000757 93ea      	ST   -Y,R30
000758 940e 0ce2 	CALL _delay_ms
                 ; 0000 0053         mode1++;
00075a e8a5      	LDI  R26,LOW(_mode1)
00075b e0b2      	LDI  R27,HIGH(_mode1)
00075c 91ed      	LD   R30,X+
00075d 91fd      	LD   R31,X+
00075e 9631      	ADIW R30,1
00075f 93fe      	ST   -X,R31
000760 93ee      	ST   -X,R30
                 ; 0000 0054         lcd_clear();
000761 940e 08e5 	CALL _lcd_clear
                 ; 0000 0055     }
                 ; 0000 0056 
                 ; 0000 0057 }
                 _0x6F:
000763 9508      	RET
                 
                 	.DSEG
                 _0x6A:
00019c           	.BYTE 0x53
                 ;
                 ;void main(void){
                 ; 0000 0059 void main(void){
                 
                 	.CSEG
                 _main:
                 ; 0000 005A     char Data;
                 ; 0000 005B     // ADC
                 ; 0000 005C     ADCSRA=(1<<ADEN)|(1<<ADPS2)|(1<<ADPS0);     //enable ADC, khong dung interrupt
                 ;	Data -> R17
000764 e8e5      	LDI  R30,LOW(133)
000765 b9e6      	OUT  0x6,R30
                 ; 0000 005D     ADMUX=ADC_VREF_TYPE;                         //chon kieu dien ap tham chieu
000766 e0e0      	LDI  R30,LOW(0)
000767 b9e7      	OUT  0x7,R30
                 ; 0000 005E     // input,output port
                 ; 0000 005F     PORTC=0xFF;
000768 efef      	LDI  R30,LOW(255)
000769 bbe5      	OUT  0x15,R30
                 ; 0000 0060     DDRC=0xff;
00076a bbe4      	OUT  0x14,R30
                 ; 0000 0061     DDRA = 0x00;
00076b e0e0      	LDI  R30,LOW(0)
00076c bbea      	OUT  0x1A,R30
                 ; 0000 0062     DDRB=0x83;
00076d e8e3      	LDI  R30,LOW(131)
00076e bbe7      	OUT  0x17,R30
                 ; 0000 0063 
                 ; 0000 0064 
                 ; 0000 0065     DDRD = 0xff;
00076f efef      	LDI  R30,LOW(255)
000770 bbe1      	OUT  0x11,R30
                 ; 0000 0066 
                 ; 0000 0067     // USART initialization
                 ; 0000 0068     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 0069     // USART Receiver: On
                 ; 0000 006A     // USART Transmitter: On
                 ; 0000 006B     // USART Mode: Asynchronous
                 ; 0000 006C     // USART Baud Rate: 38400
                 ; 0000 006D     UCSRA=0x00;
000771 e0e0      	LDI  R30,LOW(0)
000772 b9eb      	OUT  0xB,R30
                 ; 0000 006E     UCSRB=0x18;
000773 e1e8      	LDI  R30,LOW(24)
000774 b9ea      	OUT  0xA,R30
                 ; 0000 006F     UCSRC=0x86;
000775 e8e6      	LDI  R30,LOW(134)
000776 bde0      	OUT  0x20,R30
                 ; 0000 0070     UBRRH=0x00;
000777 e0e0      	LDI  R30,LOW(0)
000778 bde0      	OUT  0x20,R30
                 ; 0000 0071     UBRRL=0x0C;
000779 e0ec      	LDI  R30,LOW(12)
00077a b9e9      	OUT  0x9,R30
                 ; 0000 0072 
                 ; 0000 0073     // External Interrupt(s) initialization
                 ; 0000 0074     // INT0: Off
                 ; 0000 0075     // INT1: Off
                 ; 0000 0076     // INT2: On
                 ; 0000 0077     // INT2 Mode: Falling Edge
                 ; 0000 0078     GICR|=0x20;
00077b b7eb      	IN   R30,0x3B
00077c 62e0      	ORI  R30,0x20
00077d bfeb      	OUT  0x3B,R30
                 ; 0000 0079     MCUCR=0x00;
00077e e0e0      	LDI  R30,LOW(0)
00077f bfe5      	OUT  0x35,R30
                 ; 0000 007A     MCUCSR=0x00;
000780 bfe4      	OUT  0x34,R30
                 ; 0000 007B     GIFR=0x20;
000781 e2e0      	LDI  R30,LOW(32)
000782 bfea      	OUT  0x3A,R30
                 ; 0000 007C 
                 ; 0000 007D     TCCR1A=0x22;   // CAU HINH CHO CAC CHE DO CHO TIMER
000783 e2e2      	LDI  R30,LOW(34)
000784 bdef      	OUT  0x2F,R30
                 ; 0000 007E     TCCR1B=0x1A;
000785 e1ea      	LDI  R30,LOW(26)
000786 bdee      	OUT  0x2E,R30
                 ; 0000 007F     TCNT1H=0x00;
000787 e0e0      	LDI  R30,LOW(0)
000788 bded      	OUT  0x2D,R30
                 ; 0000 0080     TCNT1L=0x00;
000789 bdec      	OUT  0x2C,R30
                 ; 0000 0081 
                 ; 0000 0082     // PWM KENH A =====================================================
                 ; 0000 0083     ICR1H=0x4e;
00078a e4ee      	LDI  R30,LOW(78)
00078b bde7      	OUT  0x27,R30
                 ; 0000 0084     ICR1L=0x20;
00078c e2e0      	LDI  R30,LOW(32)
00078d bde6      	OUT  0x26,R30
                 ; 0000 0085     //ICR1 = 20000;
                 ; 0000 0086 
                 ; 0000 0087     //Bo chia Timer: sau 1us, TCNT1 tang 1 don vi
                 ; 0000 0088     //ICR1 = 20000 --> CHU KY cua xung tin hieu T = 20000us = 20ms
                 ; 0000 0089 
                 ; 0000 008A     OCR1AH=0x00;
00078e e0e0      	LDI  R30,LOW(0)
00078f bdeb      	OUT  0x2B,R30
                 ; 0000 008B     OCR1AL=0x00;
000790 bdea      	OUT  0x2A,R30
                 ; 0000 008C     OCR1B = 3000;
000791 ebe8      	LDI  R30,LOW(3000)
000792 e0fb      	LDI  R31,HIGH(3000)
000793 bdf9      	OUT  0x28+1,R31
000794 bde8      	OUT  0x28,R30
                 ; 0000 008D     //OCR1 = 10000 --> Thoi gian tin hieu o muc 1 T1 = 10000us =10000ms
                 ; 0000 008E     //Vay D = T1/T = 50%
                 ; 0000 008F     // PWM KENH B =====================================================
                 ; 0000 0090     //OCR1BH=0x00;
                 ; 0000 0091     //OCR1BL=0x00;
                 ; 0000 0092 
                 ; 0000 0093 
                 ; 0000 0094     // Global enable interrupts
                 ; 0000 0095     #asm("sei")    // Cho phep ngat toan cuc
000795 9478      	sei
                 ; 0000 0096 
                 ; 0000 0097     // khoi tao DS18B20
                 ; 0000 0098     w1_init(); // cau hinh su dung 1 wire
000796 940e 0cee 	CALL _w1_init
                 ; 0000 0099     ds18b20_init(T,0,0,DS18B20_9BIT_RES);  // Khoi tao DS18b20, do phan giai 12bit
000798 91e0 025d 	LDS  R30,_T
00079a 91f0 025e 	LDS  R31,_T+1
00079c 93fa      	ST   -Y,R31
00079d 93ea      	ST   -Y,R30
00079e e0e0      	LDI  R30,LOW(0)
00079f 93ea      	ST   -Y,R30
0007a0 93ea      	ST   -Y,R30
0007a1 93ea      	ST   -Y,R30
0007a2 940e 0c92 	CALL _ds18b20_init
                 ; 0000 009A 
                 ; 0000 009B     // khoi tao LCD
                 ; 0000 009C     lcd_init(16);
0007a4 e1e0      	LDI  R30,LOW(16)
0007a5 93ea      	ST   -Y,R30
0007a6 d188      	RCALL _lcd_init
                 ; 0000 009D     lcd_clear();
0007a7 d13d      	RCALL _lcd_clear
                 ; 0000 009E 
                 ; 0000 009F     lcd_gotoxy(0,0);
0007a8 e0e0      	LDI  R30,LOW(0)
0007a9 93ea      	ST   -Y,R30
0007aa 93ea      	ST   -Y,R30
0007ab d128      	RCALL _lcd_gotoxy
                 ; 0000 00A0     lcd_puts("BTL DLTDDK");
                +
0007ac eeef     +LDI R30 , LOW ( _0x70 + ( 0 ) )
0007ad e0f1     +LDI R31 , HIGH ( _0x70 + ( 0 ) )
                 	__POINTW1MN _0x70,0
0007ae 93fa      	ST   -Y,R31
0007af 93ea      	ST   -Y,R30
0007b0 d170      	RCALL _lcd_puts
                 ; 0000 00A1     lcd_gotoxy(0,1);
0007b1 e0e0      	LDI  R30,LOW(0)
0007b2 93ea      	ST   -Y,R30
0007b3 e0e1      	LDI  R30,LOW(1)
0007b4 93ea      	ST   -Y,R30
0007b5 d11e      	RCALL _lcd_gotoxy
                 ; 0000 00A2     lcd_puts("BY: SCNT GROUP");
                +
0007b6 efea     +LDI R30 , LOW ( _0x70 + ( 11 ) )
0007b7 e0f1     +LDI R31 , HIGH ( _0x70 + ( 11 ) )
                 	__POINTW1MN _0x70,11
0007b8 93fa      	ST   -Y,R31
0007b9 93ea      	ST   -Y,R30
0007ba d166      	RCALL _lcd_puts
                 ; 0000 00A3     delay_ms(2000);
0007bb ede0      	LDI  R30,LOW(2000)
0007bc e0f7      	LDI  R31,HIGH(2000)
0007bd 93fa      	ST   -Y,R31
0007be 93ea      	ST   -Y,R30
0007bf 940e 0ce2 	CALL _delay_ms
                 ; 0000 00A4     lcd_clear();
0007c1 d123      	RCALL _lcd_clear
                 ; 0000 00A5 
                 ; 0000 00A6     lcd_gotoxy(0,0);
0007c2 e0e0      	LDI  R30,LOW(0)
0007c3 93ea      	ST   -Y,R30
0007c4 93ea      	ST   -Y,R30
0007c5 d10e      	RCALL _lcd_gotoxy
                 ; 0000 00A7     lcd_puts("SET UP");
                +
0007c6 e0e9     +LDI R30 , LOW ( _0x70 + ( 26 ) )
0007c7 e0f2     +LDI R31 , HIGH ( _0x70 + ( 26 ) )
                 	__POINTW1MN _0x70,26
0007c8 93fa      	ST   -Y,R31
0007c9 93ea      	ST   -Y,R30
0007ca d156      	RCALL _lcd_puts
                 ; 0000 00A8     lcd_gotoxy(0,1);
0007cb e0e0      	LDI  R30,LOW(0)
0007cc 93ea      	ST   -Y,R30
0007cd e0e1      	LDI  R30,LOW(1)
0007ce 93ea      	ST   -Y,R30
0007cf d104      	RCALL _lcd_gotoxy
                 ; 0000 00A9     lcd_puts("PLEASE!");
                +
0007d0 e1e0     +LDI R30 , LOW ( _0x70 + ( 33 ) )
0007d1 e0f2     +LDI R31 , HIGH ( _0x70 + ( 33 ) )
                 	__POINTW1MN _0x70,33
0007d2 93fa      	ST   -Y,R31
0007d3 93ea      	ST   -Y,R30
0007d4 d14c      	RCALL _lcd_puts
                 ; 0000 00AA     while (1){
                 _0x71:
                 ; 0000 00AB 
                 ; 0000 00AC         while (mode1<6){
                 _0x74:
0007d5 91a0 0285 	LDS  R26,_mode1
0007d7 91b0 0286 	LDS  R27,_mode1+1
0007d9 9716      	SBIW R26,6
0007da f410      	BRSH _0x76
                 ; 0000 00AD             set_nguong();
0007db de37      	RCALL _set_nguong
                 ; 0000 00AE 
                 ; 0000 00AF 
                 ; 0000 00B0         }
0007dc cff8      	RJMP _0x74
                 _0x76:
                 ; 0000 00B1         read_parameter(); // doc cac thong so
0007dd dae5      	RCALL _read_parameter
                 ; 0000 00B2         dis_PC_nguong();
0007de dc5a      	RCALL _dis_PC_nguong
                 ; 0000 00B3         //-------------------------hien thi PC----------------------------------
                 ; 0000 00B4         if (Temp>=0){
0007df 2400      	CLR  R0
0007e0 14c0      	CP   R12,R0
0007e1 04d0      	CPC  R13,R0
0007e2 f414      	BRGE PC+3
0007e3 940c 08a0 	JMP _0x77
                 ; 0000 00B5             if ((Temp != Temp1)||(khoi != khoi1) || (anh_sang != anh_sang1)){
0007e5 91e0 025b 	LDS  R30,_Temp1
0007e7 91f0 025c 	LDS  R31,_Temp1+1
0007e9 15ec      	CP   R30,R12
0007ea 05fd      	CPC  R31,R13
0007eb f4b1      	BRNE _0x79
0007ec 91e0 0263 	LDS  R30,_khoi1
0007ee 91f0 0264 	LDS  R31,_khoi1+1
0007f0 91a0 025f 	LDS  R26,_khoi
0007f2 91b0 0260 	LDS  R27,_khoi+1
0007f4 17ea      	CP   R30,R26
0007f5 07fb      	CPC  R31,R27
0007f6 f459      	BRNE _0x79
0007f7 91e0 0265 	LDS  R30,_anh_sang1
0007f9 91f0 0266 	LDS  R31,_anh_sang1+1
0007fb 91a0 0261 	LDS  R26,_anh_sang
0007fd 91b0 0262 	LDS  R27,_anh_sang+1
0007ff 17ea      	CP   R30,R26
000800 07fb      	CPC  R31,R27
000801 f011      	BREQ _0x78
                 _0x79:
                 ; 0000 00B6                 dis_PC_parameter();
000802 dbe8      	RCALL _dis_PC_parameter
                 ; 0000 00B7                 dis_PC_cb();
000803 dcd5      	RCALL _dis_PC_cb
                 ; 0000 00B8             }
                 ; 0000 00B9             Temp1=Temp;    // doc gia tri nhiet do va gan vao  bien Temp
                 _0x78:
                +
000804 92c0 025b+STS _Temp1 + ( 0 ) , R12
000806 92d0 025c+STS _Temp1 + ( 0 ) + 1 , R13
                 	__PUTWMRN _Temp1,0,12,13
                 ; 0000 00BA             khoi1 = khoi;    // doc gia tri khoi
000808 91e0 025f 	LDS  R30,_khoi
00080a 91f0 0260 	LDS  R31,_khoi+1
00080c 93e0 0263 	STS  _khoi1,R30
00080e 93f0 0264 	STS  _khoi1+1,R31
                 ; 0000 00BB             anh_sang1 =  anh_sang;// doc gia tri cuong do anh sang
000810 91e0 0261 	LDS  R30,_anh_sang
000812 91f0 0262 	LDS  R31,_anh_sang+1
000814 93e0 0265 	STS  _anh_sang1,R30
000816 93f0 0266 	STS  _anh_sang1+1,R31
                 ; 0000 00BC             //-------------------------so sanh nguong----------------------------------
                 ; 0000 00BD             so_sanh();
000818 dad0      	RCALL _so_sanh
                 ; 0000 00BE             //--------------------------bao tren LCD-----------------------------------
                 ; 0000 00BF             if ((Temp<Temp_0) && (khoi<khoi_0_1) && (anh_sang>anh_sang_0_1)) {
000819 91e0 026f 	LDS  R30,_Temp_0_G000
00081b 91f0 0270 	LDS  R31,_Temp_0_G000+1
00081d 16ce      	CP   R12,R30
00081e 06df      	CPC  R13,R31
00081f f4b0      	BRSH _0x7C
000820 91e0 0267 	LDS  R30,_khoi_0_1_G000
000822 91f0 0268 	LDS  R31,_khoi_0_1_G000+1
000824 91a0 025f 	LDS  R26,_khoi
000826 91b0 0260 	LDS  R27,_khoi+1
000828 17ae      	CP   R26,R30
000829 07bf      	CPC  R27,R31
00082a f458      	BRSH _0x7C
00082b 91e0 026b 	LDS  R30,_anh_sang_0_1_G000
00082d 91f0 026c 	LDS  R31,_anh_sang_0_1_G000+1
00082f 91a0 0261 	LDS  R26,_anh_sang
000831 91b0 0262 	LDS  R27,_anh_sang+1
000833 17ea      	CP   R30,R26
000834 07fb      	CPC  R31,R27
000835 f008      	BRLO _0x7D
                 _0x7C:
000836 c00b      	RJMP _0x7B
                 _0x7D:
                 ; 0000 00C0                 lcd_clear();
000837 d0ad      	RCALL _lcd_clear
                 ; 0000 00C1                 lcd_gotoxy(0,0);
000838 e0e0      	LDI  R30,LOW(0)
000839 93ea      	ST   -Y,R30
00083a 93ea      	ST   -Y,R30
00083b d098      	RCALL _lcd_gotoxy
                 ; 0000 00C2                 lcd_puts("AN TOAN"); // neu ca 3 thong so =1 thi an toan
                +
00083c e1e8     +LDI R30 , LOW ( _0x70 + ( 41 ) )
00083d e0f2     +LDI R31 , HIGH ( _0x70 + ( 41 ) )
                 	__POINTW1MN _0x70,41
00083e 93fa      	ST   -Y,R31
00083f 93ea      	ST   -Y,R30
000840 d0e0      	RCALL _lcd_puts
                 ; 0000 00C3             }
                 ; 0000 00C4             else {
000841 c001      	RJMP _0x7E
                 _0x7B:
                 ; 0000 00C5                 dis_LCD_cb();
000842 db42      	RCALL _dis_LCD_cb
                 ; 0000 00C6             }
                 _0x7E:
                 ; 0000 00C7 
                 ; 0000 00C8             //-------------------------dieu khien--------------------------------------
                 ; 0000 00C9             control();
000843 dd36      	RCALL _control
                 ; 0000 00CA             if ((anh_sang >= anh_sang_0_1)&&( anh_sang <= anh_sang_0_2)) {
000844 91e0 026b 	LDS  R30,_anh_sang_0_1_G000
000846 91f0 026c 	LDS  R31,_anh_sang_0_1_G000+1
000848 91a0 0261 	LDS  R26,_anh_sang
00084a 91b0 0262 	LDS  R27,_anh_sang+1
00084c 17ae      	CP   R26,R30
00084d 07bf      	CPC  R27,R31
00084e f038      	BRLO _0x80
00084f 91e0 026d 	LDS  R30,_anh_sang_0_2_G000
000851 91f0 026e 	LDS  R31,_anh_sang_0_2_G000+1
000853 17ea      	CP   R30,R26
000854 07fb      	CPC  R31,R27
000855 f408      	BRSH _0x81
                 _0x80:
000856 c00f      	RJMP _0x7F
                 _0x81:
                 ; 0000 00CB                 cbi(L298, EN); //rem khong hoat dong
000857 9895      	CBI  0x12,5
                 ; 0000 00CC                 m=0;
000858 e0e0      	LDI  R30,LOW(0)
000859 93e0 0291 	STS  _m,R30
00085b 93e0 0292 	STS  _m+1,R30
                 ; 0000 00CD                 n=0;
00085d 93e0 0293 	STS  _n,R30
00085f 93e0 0294 	STS  _n+1,R30
                 ; 0000 00CE                 OCR1B = 0;
000861 e0e0      	LDI  R30,LOW(0)
000862 e0f0      	LDI  R31,HIGH(0)
000863 bdf9      	OUT  0x28+1,R31
000864 bde8      	OUT  0x28,R30
                 ; 0000 00CF             }
                 ; 0000 00D0             else {
000865 c03a      	RJMP _0x82
                 _0x7F:
                 ; 0000 00D1 
                 ; 0000 00D2                 if (anh_sang < anh_sang_0_1) {
000866 91e0 026b 	LDS  R30,_anh_sang_0_1_G000
000868 91f0 026c 	LDS  R31,_anh_sang_0_1_G000+1
00086a 91a0 0261 	LDS  R26,_anh_sang
00086c 91b0 0262 	LDS  R27,_anh_sang+1
00086e 17ae      	CP   R26,R30
00086f 07bf      	CPC  R27,R31
000870 f4a8      	BRSH _0x83
                 ; 0000 00D3                     if (m==0){
000871 91e0 0291 	LDS  R30,_m
000873 91f0 0292 	LDS  R31,_m+1
000875 9730      	SBIW R30,0
000876 f461      	BRNE _0x84
                 ; 0000 00D4                         // keo rem
                 ; 0000 00D5                         OCR1B = 2500;
000877 ece4      	LDI  R30,LOW(2500)
000878 e0f9      	LDI  R31,HIGH(2500)
000879 bdf9      	OUT  0x28+1,R31
00087a bde8      	OUT  0x28,R30
                 ; 0000 00D6                         sbi(L298, EN); //rem khong hoat dong
00087b 9a95      	SBI  0x12,5
                 ; 0000 00D7                         cbi(L298, IN1);
00087c 9893      	CBI  0x12,3
                 ; 0000 00D8                         //cbi(L298, IN2);
                 ; 0000 00D9                         delay_ms(900);
00087d e8e4      	LDI  R30,LOW(900)
00087e e0f3      	LDI  R31,HIGH(900)
00087f 93fa      	ST   -Y,R31
000880 93ea      	ST   -Y,R30
000881 940e 0ce2 	CALL _delay_ms
                 ; 0000 00DA                     }
                 ; 0000 00DB                     m++;
                 _0x84:
000883 e9a1      	LDI  R26,LOW(_m)
000884 e0b2      	LDI  R27,HIGH(_m)
000885 c014      	RJMP _0x8D
                 ; 0000 00DC                     //tat rem
                 ; 0000 00DD                     cbi(L298, EN); //rem khong hoat dong
                 ; 0000 00DE                     //OCR1B = 0;
                 ; 0000 00DF                 }
                 ; 0000 00E0 
                 ; 0000 00E1                 else  {
                 _0x83:
                 ; 0000 00E2                     if (n==0){
000886 91e0 0293 	LDS  R30,_n
000888 91f0 0294 	LDS  R31,_n+1
00088a 9730      	SBIW R30,0
00088b f461      	BRNE _0x86
                 ; 0000 00E3                         // keo rem
                 ; 0000 00E4                         OCR1B = 18500;
00088c e4e4      	LDI  R30,LOW(18500)
00088d e4f8      	LDI  R31,HIGH(18500)
00088e bdf9      	OUT  0x28+1,R31
00088f bde8      	OUT  0x28,R30
                 ; 0000 00E5                         sbi(L298, EN); //rem khong hoat dong
000890 9a95      	SBI  0x12,5
                 ; 0000 00E6                         sbi(L298, IN1);
000891 9a93      	SBI  0x12,3
                 ; 0000 00E7                         //sbi(L298, IN2);
                 ; 0000 00E8                         delay_ms(7000);
000892 e5e8      	LDI  R30,LOW(7000)
000893 e1fb      	LDI  R31,HIGH(7000)
000894 93fa      	ST   -Y,R31
000895 93ea      	ST   -Y,R30
000896 940e 0ce2 	CALL _delay_ms
                 ; 0000 00E9                     }
                 ; 0000 00EA                     n++;
                 _0x86:
000898 e9a3      	LDI  R26,LOW(_n)
000899 e0b2      	LDI  R27,HIGH(_n)
                 _0x8D:
00089a 91ed      	LD   R30,X+
00089b 91fd      	LD   R31,X+
00089c 9631      	ADIW R30,1
00089d 93fe      	ST   -X,R31
00089e 93ee      	ST   -X,R30
                 ; 0000 00EB                     //tat rem
                 ; 0000 00EC                     cbi(L298, EN); //rem khong hoat dong
00089f 9895      	CBI  0x12,5
                 ; 0000 00ED                     //OCR1B = 0;
                 ; 0000 00EE                 }
                 ; 0000 00EF             }
                 _0x82:
                 ; 0000 00F0         }
                 ; 0000 00F1     }
                 _0x77:
0008a0 cf34      	RJMP _0x71
                 ; 0000 00F2 }
                 _0x87:
0008a1 cfff      	RJMP _0x87
                 
                 	.DSEG
                 _0x70:
0001ef           	.BYTE 0x31
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
0008a2 81e8      	LD   R30,Y
0008a3 71e0      	ANDI R30,LOW(0x10)
0008a4 f011      	BREQ _0x2000004
0008a5 9aac      	SBI  0x15,4
0008a6 c001      	RJMP _0x2000005
                 _0x2000004:
0008a7 98ac      	CBI  0x15,4
                 _0x2000005:
0008a8 81e8      	LD   R30,Y
0008a9 72e0      	ANDI R30,LOW(0x20)
0008aa f011      	BREQ _0x2000006
0008ab 9aad      	SBI  0x15,5
0008ac c001      	RJMP _0x2000007
                 _0x2000006:
0008ad 98ad      	CBI  0x15,5
                 _0x2000007:
0008ae 81e8      	LD   R30,Y
0008af 74e0      	ANDI R30,LOW(0x40)
0008b0 f011      	BREQ _0x2000008
0008b1 9aae      	SBI  0x15,6
0008b2 c001      	RJMP _0x2000009
                 _0x2000008:
0008b3 98ae      	CBI  0x15,6
                 _0x2000009:
0008b4 81e8      	LD   R30,Y
0008b5 78e0      	ANDI R30,LOW(0x80)
0008b6 f011      	BREQ _0x200000A
0008b7 9aaf      	SBI  0x15,7
0008b8 c001      	RJMP _0x200000B
                 _0x200000A:
0008b9 98af      	CBI  0x15,7
                 _0x200000B:
                +
0008ba e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
0008bb 958a     +DEC R24
0008bc f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
0008bd 9aaa      	SBI  0x15,2
                +
0008be e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0008bf 958a     +DEC R24
0008c0 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0008c1 98aa      	CBI  0x15,2
                +
0008c2 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0008c3 958a     +DEC R24
0008c4 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0008c5 940c 0977 	JMP  _0x20E0005
                 __lcd_write_data:
0008c7 81e8      	LD   R30,Y
0008c8 93ea      	ST   -Y,R30
0008c9 dfd8      	RCALL __lcd_write_nibble_G100
0008ca 81e8          ld    r30,y
0008cb 95e2          swap  r30
0008cc 83e8          st    y,r30
0008cd 81e8      	LD   R30,Y
0008ce 93ea      	ST   -Y,R30
0008cf dfd2      	RCALL __lcd_write_nibble_G100
                +
0008d0 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0008d1 958a     +DEC R24
0008d2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0008d3 c0a3      	RJMP _0x20E0005
                 _lcd_gotoxy:
0008d4 81e8      	LD   R30,Y
0008d5 e0f0      	LDI  R31,0
0008d6 56e9      	SUBI R30,LOW(-__base_y_G100)
0008d7 4ffd      	SBCI R31,HIGH(-__base_y_G100)
0008d8 81e0      	LD   R30,Z
0008d9 81a9      	LDD  R26,Y+1
0008da 0fea      	ADD  R30,R26
0008db 93ea      	ST   -Y,R30
0008dc dfea      	RCALL __lcd_write_data
0008dd 81e9      	LDD  R30,Y+1
0008de 93e0 029b 	STS  __lcd_x,R30
0008e0 81e8      	LD   R30,Y
0008e1 93e0 029c 	STS  __lcd_y,R30
0008e3 9622      	ADIW R28,2
0008e4 9508      	RET
                 _lcd_clear:
0008e5 e0e2      	LDI  R30,LOW(2)
0008e6 93ea      	ST   -Y,R30
0008e7 dfdf      	RCALL __lcd_write_data
0008e8 e0e3      	LDI  R30,LOW(3)
0008e9 e0f0      	LDI  R31,HIGH(3)
0008ea 93fa      	ST   -Y,R31
0008eb 93ea      	ST   -Y,R30
0008ec 940e 0ce2 	CALL _delay_ms
0008ee e0ec      	LDI  R30,LOW(12)
0008ef 93ea      	ST   -Y,R30
0008f0 dfd6      	RCALL __lcd_write_data
0008f1 e0e1      	LDI  R30,LOW(1)
0008f2 93ea      	ST   -Y,R30
0008f3 dfd3      	RCALL __lcd_write_data
0008f4 e0e3      	LDI  R30,LOW(3)
0008f5 e0f0      	LDI  R31,HIGH(3)
0008f6 93fa      	ST   -Y,R31
0008f7 93ea      	ST   -Y,R30
0008f8 940e 0ce2 	CALL _delay_ms
0008fa e0e0      	LDI  R30,LOW(0)
0008fb 93e0 029c 	STS  __lcd_y,R30
0008fd 93e0 029b 	STS  __lcd_x,R30
0008ff 9508      	RET
                 _lcd_putchar:
000900 81a8      	LD   R26,Y
000901 30aa      	CPI  R26,LOW(0xA)
000902 f031      	BREQ _0x2000011
000903 91e0 029d 	LDS  R30,__lcd_maxx
000905 91a0 029b 	LDS  R26,__lcd_x
000907 17ae      	CP   R26,R30
000908 f068      	BRLO _0x2000010
                 _0x2000011:
000909 e0e0      	LDI  R30,LOW(0)
00090a 93ea      	ST   -Y,R30
00090b 91e0 029c 	LDS  R30,__lcd_y
00090d 5fef      	SUBI R30,-LOW(1)
00090e 93e0 029c 	STS  __lcd_y,R30
000910 93ea      	ST   -Y,R30
000911 dfc2      	RCALL _lcd_gotoxy
000912 81a8      	LD   R26,Y
000913 30aa      	CPI  R26,LOW(0xA)
000914 f409      	BRNE _0x2000013
000915 c061      	RJMP _0x20E0005
                 _0x2000013:
                 _0x2000010:
000916 91e0 029b 	LDS  R30,__lcd_x
000918 5fef      	SUBI R30,-LOW(1)
000919 93e0 029b 	STS  __lcd_x,R30
00091b 9aa8      	SBI  0x15,0
00091c 81e8      	LD   R30,Y
00091d 93ea      	ST   -Y,R30
00091e dfa8      	RCALL __lcd_write_data
00091f 98a8      	CBI  0x15,0
000920 c056      	RJMP _0x20E0005
                 _lcd_puts:
000921 931a      	ST   -Y,R17
                 _0x2000014:
000922 81a9      	LDD  R26,Y+1
000923 81ba      	LDD  R27,Y+1+1
000924 91ed      	LD   R30,X+
000925 83a9      	STD  Y+1,R26
000926 83ba      	STD  Y+1+1,R27
000927 2f1e      	MOV  R17,R30
000928 30e0      	CPI  R30,0
000929 f019      	BREQ _0x2000016
00092a 931a      	ST   -Y,R17
00092b dfd4      	RCALL _lcd_putchar
00092c cff5      	RJMP _0x2000014
                 _0x2000016:
00092d 940c 0c8f 	JMP  _0x20E0002
                 _lcd_init:
00092f 9aa4      	SBI  0x14,4
000930 9aa5      	SBI  0x14,5
000931 9aa6      	SBI  0x14,6
000932 9aa7      	SBI  0x14,7
000933 9aa2      	SBI  0x14,2
000934 9aa0      	SBI  0x14,0
000935 9aa1      	SBI  0x14,1
000936 98aa      	CBI  0x15,2
000937 98a8      	CBI  0x15,0
000938 98a9      	CBI  0x15,1
000939 81e8      	LD   R30,Y
00093a 93e0 029d 	STS  __lcd_maxx,R30
00093c 58e0      	SUBI R30,-LOW(128)
                +
00093d 93e0 0299+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
00093f 81e8      	LD   R30,Y
000940 54e0      	SUBI R30,-LOW(192)
                +
000941 93e0 029a+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000943 e1e4      	LDI  R30,LOW(20)
000944 e0f0      	LDI  R31,HIGH(20)
000945 93fa      	ST   -Y,R31
000946 93ea      	ST   -Y,R30
000947 940e 0ce2 	CALL _delay_ms
000949 e3e0      	LDI  R30,LOW(48)
00094a 93ea      	ST   -Y,R30
00094b df56      	RCALL __lcd_write_nibble_G100
                +
00094c ec88     +LDI R24 , LOW ( 200 )
00094d e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00094e 9701     +SBIW R24 , 1
00094f f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000950 e3e0      	LDI  R30,LOW(48)
000951 93ea      	ST   -Y,R30
000952 df4f      	RCALL __lcd_write_nibble_G100
                +
000953 ec88     +LDI R24 , LOW ( 200 )
000954 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000955 9701     +SBIW R24 , 1
000956 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000957 e3e0      	LDI  R30,LOW(48)
000958 93ea      	ST   -Y,R30
000959 df48      	RCALL __lcd_write_nibble_G100
                +
00095a ec88     +LDI R24 , LOW ( 200 )
00095b e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00095c 9701     +SBIW R24 , 1
00095d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00095e e2e0      	LDI  R30,LOW(32)
00095f 93ea      	ST   -Y,R30
000960 df41      	RCALL __lcd_write_nibble_G100
                +
000961 ec88     +LDI R24 , LOW ( 200 )
000962 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000963 9701     +SBIW R24 , 1
000964 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000965 e2e8      	LDI  R30,LOW(40)
000966 93ea      	ST   -Y,R30
000967 df5f      	RCALL __lcd_write_data
000968 e0e4      	LDI  R30,LOW(4)
000969 93ea      	ST   -Y,R30
00096a df5c      	RCALL __lcd_write_data
00096b e8e5      	LDI  R30,LOW(133)
00096c 93ea      	ST   -Y,R30
00096d df59      	RCALL __lcd_write_data
00096e e0e6      	LDI  R30,LOW(6)
00096f 93ea      	ST   -Y,R30
000970 df56      	RCALL __lcd_write_data
000971 df73      	RCALL _lcd_clear
000972 c004      	RJMP _0x20E0005
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 putchar0:
000973 9b5d           sbis usr,udre
000974 cffe           rjmp putchar0
000975 81e8           ld   r30,y
000976 b9ec           out  udr,r30
                 _0x20E0005:
000977 9621      	ADIW R28,1
000978 9508      	RET
                 _puts:
000979 931a      	ST   -Y,R17
                 _0x2020003:
00097a 81a9      	LDD  R26,Y+1
00097b 81ba      	LDD  R27,Y+1+1
00097c 91ed      	LD   R30,X+
00097d 83a9      	STD  Y+1,R26
00097e 83ba      	STD  Y+1+1,R27
00097f 2f1e      	MOV  R17,R30
000980 30e0      	CPI  R30,0
000981 f019      	BREQ _0x2020005
000982 931a      	ST   -Y,R17
000983 dfef      	RCALL _putchar
000984 cff5      	RJMP _0x2020003
                 _0x2020005:
000985 e0ea      	LDI  R30,LOW(10)
000986 93ea      	ST   -Y,R30
000987 dfeb      	RCALL _putchar
000988 940c 0c8f 	JMP  _0x20E0002
                 _put_buff_G101:
00098a 931a      	ST   -Y,R17
00098b 930a      	ST   -Y,R16
00098c 81aa      	LDD  R26,Y+2
00098d 81bb      	LDD  R27,Y+2+1
00098e 9612      	ADIW R26,2
00098f 940e 0e59 	CALL __GETW1P
000991 9730      	SBIW R30,0
000992 f159      	BREQ _0x2020010
000993 81aa      	LDD  R26,Y+2
000994 81bb      	LDD  R27,Y+2+1
000995 9614      	ADIW R26,4
000996 940e 0e59 	CALL __GETW1P
000998 018f      	MOVW R16,R30
000999 9730      	SBIW R30,0
00099a f061      	BREQ _0x2020012
                +
00099b 3002     +CPI R16 , LOW ( 2 )
00099c e0e0     +LDI R30 , HIGH ( 2 )
00099d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00099e f0f0      	BRLO _0x2020013
00099f 01f8      	MOVW R30,R16
0009a0 9731      	SBIW R30,1
0009a1 018f      	MOVW R16,R30
                +
0009a2 81aa     +LDD R26 , Y + 2
0009a3 81bb     +LDD R27 , Y + 2 + 1
0009a4 9614     +ADIW R26 , 4
0009a5 93ed     +ST X + , R30
0009a6 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
0009a7 81aa      	LDD  R26,Y+2
0009a8 81bb      	LDD  R27,Y+2+1
0009a9 9612      	ADIW R26,2
0009aa 91ed      	LD   R30,X+
0009ab 91fd      	LD   R31,X+
0009ac 9631      	ADIW R30,1
0009ad 93fe      	ST   -X,R31
0009ae 93ee      	ST   -X,R30
0009af 9731      	SBIW R30,1
0009b0 81ac      	LDD  R26,Y+4
0009b1 83a0      	STD  Z+0,R26
0009b2 81aa      	LDD  R26,Y+2
0009b3 81bb      	LDD  R27,Y+2+1
0009b4 940e 0e59 	CALL __GETW1P
0009b6 23ff      	TST  R31
0009b7 f02a      	BRMI _0x2020014
0009b8 91ed      	LD   R30,X+
0009b9 91fd      	LD   R31,X+
0009ba 9631      	ADIW R30,1
0009bb 93fe      	ST   -X,R31
0009bc 93ee      	ST   -X,R30
                 _0x2020014:
                 _0x2020013:
0009bd c006      	RJMP _0x2020015
                 _0x2020010:
0009be 81aa      	LDD  R26,Y+2
0009bf 81bb      	LDD  R27,Y+2+1
0009c0 efef      	LDI  R30,LOW(65535)
0009c1 efff      	LDI  R31,HIGH(65535)
0009c2 93ed      	ST   X+,R30
0009c3 93fc      	ST   X,R31
                 _0x2020015:
0009c4 8119      	LDD  R17,Y+1
0009c5 8108      	LDD  R16,Y+0
0009c6 940c 0ce0 	JMP  _0x20E0001
                 __print_G101:
0009c8 9726      	SBIW R28,6
0009c9 940e 0e6a 	CALL __SAVELOCR6
0009cb e010      	LDI  R17,0
0009cc 85ac      	LDD  R26,Y+12
0009cd 85bd      	LDD  R27,Y+12+1
0009ce e0e0      	LDI  R30,LOW(0)
0009cf e0f0      	LDI  R31,HIGH(0)
0009d0 93ed      	ST   X+,R30
0009d1 93fc      	ST   X,R31
                 _0x2020016:
0009d2 89ea      	LDD  R30,Y+18
0009d3 89fb      	LDD  R31,Y+18+1
0009d4 9631      	ADIW R30,1
0009d5 8bea      	STD  Y+18,R30
0009d6 8bfb      	STD  Y+18+1,R31
0009d7 9731      	SBIW R30,1
0009d8 91e4      	LPM  R30,Z
0009d9 2f2e      	MOV  R18,R30
0009da 30e0      	CPI  R30,0
0009db f411      	BRNE PC+3
0009dc 940c 0b45 	JMP _0x2020018
0009de 2fe1      	MOV  R30,R17
0009df 30e0      	CPI  R30,0
0009e0 f469      	BRNE _0x202001C
0009e1 3225      	CPI  R18,37
0009e2 f411      	BRNE _0x202001D
0009e3 e011      	LDI  R17,LOW(1)
0009e4 c008      	RJMP _0x202001E
                 _0x202001D:
0009e5 932a      	ST   -Y,R18
0009e6 85ed      	LDD  R30,Y+13
0009e7 85fe      	LDD  R31,Y+13+1
0009e8 93fa      	ST   -Y,R31
0009e9 93ea      	ST   -Y,R30
0009ea 89e9      	LDD  R30,Y+17
0009eb 89fa      	LDD  R31,Y+17+1
0009ec 9509      	ICALL
                 _0x202001E:
0009ed c156      	RJMP _0x202001B
                 _0x202001C:
0009ee 30e1      	CPI  R30,LOW(0x1)
0009ef f4d9      	BRNE _0x202001F
0009f0 3225      	CPI  R18,37
0009f1 f449      	BRNE _0x2020020
0009f2 932a      	ST   -Y,R18
0009f3 85ed      	LDD  R30,Y+13
0009f4 85fe      	LDD  R31,Y+13+1
0009f5 93fa      	ST   -Y,R31
0009f6 93ea      	ST   -Y,R30
0009f7 89e9      	LDD  R30,Y+17
0009f8 89fa      	LDD  R31,Y+17+1
0009f9 9509      	ICALL
0009fa c148      	RJMP _0x20200C9
                 _0x2020020:
0009fb e012      	LDI  R17,LOW(2)
0009fc e040      	LDI  R20,LOW(0)
0009fd e000      	LDI  R16,LOW(0)
0009fe 322d      	CPI  R18,45
0009ff f411      	BRNE _0x2020021
000a00 e001      	LDI  R16,LOW(1)
000a01 c142      	RJMP _0x202001B
                 _0x2020021:
000a02 322b      	CPI  R18,43
000a03 f411      	BRNE _0x2020022
000a04 e24b      	LDI  R20,LOW(43)
000a05 c13e      	RJMP _0x202001B
                 _0x2020022:
000a06 3220      	CPI  R18,32
000a07 f411      	BRNE _0x2020023
000a08 e240      	LDI  R20,LOW(32)
000a09 c13a      	RJMP _0x202001B
                 _0x2020023:
000a0a c002      	RJMP _0x2020024
                 _0x202001F:
000a0b 30e2      	CPI  R30,LOW(0x2)
000a0c f439      	BRNE _0x2020025
                 _0x2020024:
000a0d e050      	LDI  R21,LOW(0)
000a0e e013      	LDI  R17,LOW(3)
000a0f 3320      	CPI  R18,48
000a10 f411      	BRNE _0x2020026
000a11 6800      	ORI  R16,LOW(128)
000a12 c131      	RJMP _0x202001B
                 _0x2020026:
000a13 c004      	RJMP _0x2020027
                 _0x2020025:
000a14 30e3      	CPI  R30,LOW(0x3)
000a15 f011      	BREQ PC+3
000a16 940c 0b44 	JMP _0x202001B
                 _0x2020027:
000a18 3320      	CPI  R18,48
000a19 f010      	BRLO _0x202002A
000a1a 332a      	CPI  R18,58
000a1b f008      	BRLO _0x202002B
                 _0x202002A:
000a1c c007      	RJMP _0x2020029
                 _0x202002B:
000a1d e0aa      	LDI  R26,LOW(10)
000a1e 9f5a      	MUL  R21,R26
000a1f 2d50      	MOV  R21,R0
000a20 2fe2      	MOV  R30,R18
000a21 53e0      	SUBI R30,LOW(48)
000a22 0f5e      	ADD  R21,R30
000a23 c120      	RJMP _0x202001B
                 _0x2020029:
000a24 2fe2      	MOV  R30,R18
000a25 36e3      	CPI  R30,LOW(0x63)
000a26 f479      	BRNE _0x202002F
000a27 89e8      	LDD  R30,Y+16
000a28 89f9      	LDD  R31,Y+16+1
000a29 9734      	SBIW R30,4
000a2a 8be8      	STD  Y+16,R30
000a2b 8bf9      	STD  Y+16+1,R31
000a2c 81a4      	LDD  R26,Z+4
000a2d 93aa      	ST   -Y,R26
000a2e 85ed      	LDD  R30,Y+13
000a2f 85fe      	LDD  R31,Y+13+1
000a30 93fa      	ST   -Y,R31
000a31 93ea      	ST   -Y,R30
000a32 89e9      	LDD  R30,Y+17
000a33 89fa      	LDD  R31,Y+17+1
000a34 9509      	ICALL
000a35 c10d      	RJMP _0x2020030
                 _0x202002F:
000a36 37e3      	CPI  R30,LOW(0x73)
000a37 f491      	BRNE _0x2020032
000a38 89e8      	LDD  R30,Y+16
000a39 89f9      	LDD  R31,Y+16+1
000a3a 9734      	SBIW R30,4
000a3b 8be8      	STD  Y+16,R30
000a3c 8bf9      	STD  Y+16+1,R31
000a3d 89a8      	LDD  R26,Y+16
000a3e 89b9      	LDD  R27,Y+16+1
000a3f 9614      	ADIW R26,4
000a40 940e 0e59 	CALL __GETW1P
000a42 83ee      	STD  Y+6,R30
000a43 83ff      	STD  Y+6+1,R31
000a44 93fa      	ST   -Y,R31
000a45 93ea      	ST   -Y,R30
000a46 940e 0bd1 	CALL _strlen
000a48 2f1e      	MOV  R17,R30
000a49 c014      	RJMP _0x2020033
                 _0x2020032:
000a4a 37e0      	CPI  R30,LOW(0x70)
000a4b f4b1      	BRNE _0x2020035
000a4c 89e8      	LDD  R30,Y+16
000a4d 89f9      	LDD  R31,Y+16+1
000a4e 9734      	SBIW R30,4
000a4f 8be8      	STD  Y+16,R30
000a50 8bf9      	STD  Y+16+1,R31
000a51 89a8      	LDD  R26,Y+16
000a52 89b9      	LDD  R27,Y+16+1
000a53 9614      	ADIW R26,4
000a54 940e 0e59 	CALL __GETW1P
000a56 83ee      	STD  Y+6,R30
000a57 83ff      	STD  Y+6+1,R31
000a58 93fa      	ST   -Y,R31
000a59 93ea      	ST   -Y,R30
000a5a 940e 0bdb 	CALL _strlenf
000a5c 2f1e      	MOV  R17,R30
000a5d 6008      	ORI  R16,LOW(8)
                 _0x2020033:
000a5e 6002      	ORI  R16,LOW(2)
000a5f 770f      	ANDI R16,LOW(127)
000a60 e030      	LDI  R19,LOW(0)
000a61 c043      	RJMP _0x2020036
                 _0x2020035:
000a62 36e4      	CPI  R30,LOW(0x64)
000a63 f011      	BREQ _0x2020039
000a64 36e9      	CPI  R30,LOW(0x69)
000a65 f411      	BRNE _0x202003A
                 _0x2020039:
000a66 6004      	ORI  R16,LOW(4)
000a67 c002      	RJMP _0x202003B
                 _0x202003A:
000a68 37e5      	CPI  R30,LOW(0x75)
000a69 f431      	BRNE _0x202003C
                 _0x202003B:
000a6a e5e4      	LDI  R30,LOW(_tbl10_G101*2)
000a6b e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
000a6c 83ee      	STD  Y+6,R30
000a6d 83ff      	STD  Y+6+1,R31
000a6e e015      	LDI  R17,LOW(5)
000a6f c00d      	RJMP _0x202003D
                 _0x202003C:
000a70 35e8      	CPI  R30,LOW(0x58)
000a71 f411      	BRNE _0x202003F
000a72 6008      	ORI  R16,LOW(8)
000a73 c004      	RJMP _0x2020040
                 _0x202003F:
000a74 37e8      	CPI  R30,LOW(0x78)
000a75 f011      	BREQ PC+3
000a76 940c 0b43 	JMP _0x2020071
                 _0x2020040:
000a78 e5ee      	LDI  R30,LOW(_tbl16_G101*2)
000a79 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
000a7a 83ee      	STD  Y+6,R30
000a7b 83ff      	STD  Y+6+1,R31
000a7c e014      	LDI  R17,LOW(4)
                 _0x202003D:
000a7d ff02      	SBRS R16,2
000a7e c01a      	RJMP _0x2020042
000a7f 89e8      	LDD  R30,Y+16
000a80 89f9      	LDD  R31,Y+16+1
000a81 9734      	SBIW R30,4
000a82 8be8      	STD  Y+16,R30
000a83 8bf9      	STD  Y+16+1,R31
000a84 89a8      	LDD  R26,Y+16
000a85 89b9      	LDD  R27,Y+16+1
000a86 9614      	ADIW R26,4
000a87 940e 0e59 	CALL __GETW1P
000a89 87ea      	STD  Y+10,R30
000a8a 87fb      	STD  Y+10+1,R31
000a8b 85ab      	LDD  R26,Y+11
000a8c 23aa      	TST  R26
000a8d f42a      	BRPL _0x2020043
000a8e 940e 0e3a 	CALL __ANEGW1
000a90 87ea      	STD  Y+10,R30
000a91 87fb      	STD  Y+10+1,R31
000a92 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
000a93 3040      	CPI  R20,0
000a94 f011      	BREQ _0x2020044
000a95 5f1f      	SUBI R17,-LOW(1)
000a96 c001      	RJMP _0x2020045
                 _0x2020044:
000a97 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
000a98 c00c      	RJMP _0x2020046
                 _0x2020042:
000a99 89e8      	LDD  R30,Y+16
000a9a 89f9      	LDD  R31,Y+16+1
000a9b 9734      	SBIW R30,4
000a9c 8be8      	STD  Y+16,R30
000a9d 8bf9      	STD  Y+16+1,R31
000a9e 89a8      	LDD  R26,Y+16
000a9f 89b9      	LDD  R27,Y+16+1
000aa0 9614      	ADIW R26,4
000aa1 940e 0e59 	CALL __GETW1P
000aa3 87ea      	STD  Y+10,R30
000aa4 87fb      	STD  Y+10+1,R31
                 _0x2020046:
                 _0x2020036:
000aa5 fd00      	SBRC R16,0
000aa6 c017      	RJMP _0x2020047
                 _0x2020048:
000aa7 1715      	CP   R17,R21
000aa8 f4a8      	BRSH _0x202004A
000aa9 ff07      	SBRS R16,7
000aaa c008      	RJMP _0x202004B
000aab ff02      	SBRS R16,2
000aac c004      	RJMP _0x202004C
000aad 7f0b      	ANDI R16,LOW(251)
000aae 2f24      	MOV  R18,R20
000aaf 5011      	SUBI R17,LOW(1)
000ab0 c001      	RJMP _0x202004D
                 _0x202004C:
000ab1 e320      	LDI  R18,LOW(48)
                 _0x202004D:
000ab2 c001      	RJMP _0x202004E
                 _0x202004B:
000ab3 e220      	LDI  R18,LOW(32)
                 _0x202004E:
000ab4 932a      	ST   -Y,R18
000ab5 85ed      	LDD  R30,Y+13
000ab6 85fe      	LDD  R31,Y+13+1
000ab7 93fa      	ST   -Y,R31
000ab8 93ea      	ST   -Y,R30
000ab9 89e9      	LDD  R30,Y+17
000aba 89fa      	LDD  R31,Y+17+1
000abb 9509      	ICALL
000abc 5051      	SUBI R21,LOW(1)
000abd cfe9      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000abe 2f31      	MOV  R19,R17
000abf ff01      	SBRS R16,1
000ac0 c01d      	RJMP _0x202004F
                 _0x2020050:
000ac1 3030      	CPI  R19,0
000ac2 f0d1      	BREQ _0x2020052
000ac3 ff03      	SBRS R16,3
000ac4 c006      	RJMP _0x2020053
000ac5 81ee      	LDD  R30,Y+6
000ac6 81ff      	LDD  R31,Y+6+1
000ac7 9125      	LPM  R18,Z+
000ac8 83ee      	STD  Y+6,R30
000ac9 83ff      	STD  Y+6+1,R31
000aca c005      	RJMP _0x2020054
                 _0x2020053:
000acb 81ae      	LDD  R26,Y+6
000acc 81bf      	LDD  R27,Y+6+1
000acd 912d      	LD   R18,X+
000ace 83ae      	STD  Y+6,R26
000acf 83bf      	STD  Y+6+1,R27
                 _0x2020054:
000ad0 932a      	ST   -Y,R18
000ad1 85ed      	LDD  R30,Y+13
000ad2 85fe      	LDD  R31,Y+13+1
000ad3 93fa      	ST   -Y,R31
000ad4 93ea      	ST   -Y,R30
000ad5 89e9      	LDD  R30,Y+17
000ad6 89fa      	LDD  R31,Y+17+1
000ad7 9509      	ICALL
000ad8 3050      	CPI  R21,0
000ad9 f009      	BREQ _0x2020055
000ada 5051      	SUBI R21,LOW(1)
                 _0x2020055:
000adb 5031      	SUBI R19,LOW(1)
000adc cfe4      	RJMP _0x2020050
                 _0x2020052:
000add c056      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
000ade e320      	LDI  R18,LOW(48)
000adf 81ee      	LDD  R30,Y+6
000ae0 81ff      	LDD  R31,Y+6+1
000ae1 940e 0e5d 	CALL __GETW1PF
000ae3 87e8      	STD  Y+8,R30
000ae4 87f9      	STD  Y+8+1,R31
000ae5 81ee      	LDD  R30,Y+6
000ae6 81ff      	LDD  R31,Y+6+1
000ae7 9632      	ADIW R30,2
000ae8 83ee      	STD  Y+6,R30
000ae9 83ff      	STD  Y+6+1,R31
                 _0x202005A:
000aea 85e8      	LDD  R30,Y+8
000aeb 85f9      	LDD  R31,Y+8+1
000aec 85aa      	LDD  R26,Y+10
000aed 85bb      	LDD  R27,Y+10+1
000aee 17ae      	CP   R26,R30
000aef 07bf      	CPC  R27,R31
000af0 f050      	BRLO _0x202005C
000af1 5f2f      	SUBI R18,-LOW(1)
000af2 85a8      	LDD  R26,Y+8
000af3 85b9      	LDD  R27,Y+8+1
000af4 85ea      	LDD  R30,Y+10
000af5 85fb      	LDD  R31,Y+10+1
000af6 1bea      	SUB  R30,R26
000af7 0bfb      	SBC  R31,R27
000af8 87ea      	STD  Y+10,R30
000af9 87fb      	STD  Y+10+1,R31
000afa cfef      	RJMP _0x202005A
                 _0x202005C:
000afb 332a      	CPI  R18,58
000afc f028      	BRLO _0x202005D
000afd ff03      	SBRS R16,3
000afe c002      	RJMP _0x202005E
000aff 5f29      	SUBI R18,-LOW(7)
000b00 c001      	RJMP _0x202005F
                 _0x202005E:
000b01 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
000b02 fd04      	SBRC R16,4
000b03 c01f      	RJMP _0x2020061
000b04 3321      	CPI  R18,49
000b05 f420      	BRSH _0x2020063
000b06 85a8      	LDD  R26,Y+8
000b07 85b9      	LDD  R27,Y+8+1
000b08 9711      	SBIW R26,1
000b09 f409      	BRNE _0x2020062
                 _0x2020063:
000b0a c009      	RJMP _0x20200CA
                 _0x2020062:
000b0b 1753      	CP   R21,R19
000b0c f010      	BRLO _0x2020067
000b0d ff00      	SBRS R16,0
000b0e c001      	RJMP _0x2020068
                 _0x2020067:
000b0f c01e      	RJMP _0x2020066
                 _0x2020068:
000b10 e220      	LDI  R18,LOW(32)
000b11 ff07      	SBRS R16,7
000b12 c010      	RJMP _0x2020069
000b13 e320      	LDI  R18,LOW(48)
                 _0x20200CA:
000b14 6100      	ORI  R16,LOW(16)
000b15 ff02      	SBRS R16,2
000b16 c00c      	RJMP _0x202006A
000b17 7f0b      	ANDI R16,LOW(251)
000b18 934a      	ST   -Y,R20
000b19 85ed      	LDD  R30,Y+13
000b1a 85fe      	LDD  R31,Y+13+1
000b1b 93fa      	ST   -Y,R31
000b1c 93ea      	ST   -Y,R30
000b1d 89e9      	LDD  R30,Y+17
000b1e 89fa      	LDD  R31,Y+17+1
000b1f 9509      	ICALL
000b20 3050      	CPI  R21,0
000b21 f009      	BREQ _0x202006B
000b22 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
000b23 932a      	ST   -Y,R18
000b24 85ed      	LDD  R30,Y+13
000b25 85fe      	LDD  R31,Y+13+1
000b26 93fa      	ST   -Y,R31
000b27 93ea      	ST   -Y,R30
000b28 89e9      	LDD  R30,Y+17
000b29 89fa      	LDD  R31,Y+17+1
000b2a 9509      	ICALL
000b2b 3050      	CPI  R21,0
000b2c f009      	BREQ _0x202006C
000b2d 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
000b2e 5031      	SUBI R19,LOW(1)
000b2f 85a8      	LDD  R26,Y+8
000b30 85b9      	LDD  R27,Y+8+1
000b31 9712      	SBIW R26,2
000b32 f008      	BRLO _0x2020059
000b33 cfaa      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
000b34 ff00      	SBRS R16,0
000b35 c00d      	RJMP _0x202006D
                 _0x202006E:
000b36 3050      	CPI  R21,0
000b37 f059      	BREQ _0x2020070
000b38 5051      	SUBI R21,LOW(1)
000b39 e2e0      	LDI  R30,LOW(32)
000b3a 93ea      	ST   -Y,R30
000b3b 85ed      	LDD  R30,Y+13
000b3c 85fe      	LDD  R31,Y+13+1
000b3d 93fa      	ST   -Y,R31
000b3e 93ea      	ST   -Y,R30
000b3f 89e9      	LDD  R30,Y+17
000b40 89fa      	LDD  R31,Y+17+1
000b41 9509      	ICALL
000b42 cff3      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200C9:
000b43 e010      	LDI  R17,LOW(0)
                 _0x202001B:
000b44 ce8d      	RJMP _0x2020016
                 _0x2020018:
000b45 85ac      	LDD  R26,Y+12
000b46 85bd      	LDD  R27,Y+12+1
000b47 940e 0e59 	CALL __GETW1P
000b49 940e 0e71 	CALL __LOADLOCR6
000b4b 9664      	ADIW R28,20
000b4c 9508      	RET
                 _sprintf:
000b4d 92ff      	PUSH R15
000b4e 2ef8      	MOV  R15,R24
000b4f 9726      	SBIW R28,6
000b50 940e 0e6c 	CALL __SAVELOCR4
000b52 01de      	MOVW R26,R28
000b53 961c      	ADIW R26,12
000b54 940e 0e36 	CALL __ADDW2R15
000b56 940e 0e59 	CALL __GETW1P
000b58 9730      	SBIW R30,0
000b59 f419      	BRNE _0x2020072
000b5a efef      	LDI  R30,LOW(65535)
000b5b efff      	LDI  R31,HIGH(65535)
000b5c c029      	RJMP _0x20E0004
                 _0x2020072:
000b5d 01de      	MOVW R26,R28
000b5e 9616      	ADIW R26,6
000b5f 940e 0e36 	CALL __ADDW2R15
000b61 018d      	MOVW R16,R26
000b62 01de      	MOVW R26,R28
000b63 961c      	ADIW R26,12
000b64 940e 0e36 	CALL __ADDW2R15
000b66 940e 0e59 	CALL __GETW1P
000b68 83ee      	STD  Y+6,R30
000b69 83ff      	STD  Y+6+1,R31
000b6a e0e0      	LDI  R30,LOW(0)
000b6b 87e8      	STD  Y+8,R30
000b6c 87e9      	STD  Y+8+1,R30
000b6d 01de      	MOVW R26,R28
000b6e 961a      	ADIW R26,10
000b6f 940e 0e36 	CALL __ADDW2R15
000b71 940e 0e59 	CALL __GETW1P
000b73 93fa      	ST   -Y,R31
000b74 93ea      	ST   -Y,R30
000b75 931a      	ST   -Y,R17
000b76 930a      	ST   -Y,R16
000b77 e8ea      	LDI  R30,LOW(_put_buff_G101)
000b78 e0f9      	LDI  R31,HIGH(_put_buff_G101)
000b79 93fa      	ST   -Y,R31
000b7a 93ea      	ST   -Y,R30
000b7b 01fe      	MOVW R30,R28
000b7c 963a      	ADIW R30,10
000b7d 93fa      	ST   -Y,R31
000b7e 93ea      	ST   -Y,R30
000b7f de48      	RCALL __print_G101
000b80 019f      	MOVW R18,R30
000b81 81ae      	LDD  R26,Y+6
000b82 81bf      	LDD  R27,Y+6+1
000b83 e0e0      	LDI  R30,LOW(0)
000b84 93ec      	ST   X,R30
000b85 01f9      	MOVW R30,R18
                 _0x20E0004:
000b86 940e 0e73 	CALL __LOADLOCR4
000b88 962a      	ADIW R28,10
000b89 90ff      	POP  R15
000b8a 9508      	RET
                 
                 	.CSEG
                 _itoa:
000b8b 91a9          ld   r26,y+
000b8c 91b9          ld   r27,y+
000b8d 91e9          ld   r30,y+
000b8e 91f9          ld   r31,y+
000b8f 9630          adiw r30,0
000b90 f42a          brpl __itoa0
000b91 95e0          com  r30
000b92 95f0          com  r31
000b93 9631          adiw r30,1
000b94 e26d          ldi  r22,'-'
000b95 936d          st   x+,r22
                 __itoa0:
000b96 94e8          clt
000b97 e180          ldi  r24,low(10000)
000b98 e297          ldi  r25,high(10000)
000b99 d00d          rcall __itoa1
000b9a ee88          ldi  r24,low(1000)
000b9b e093          ldi  r25,high(1000)
000b9c d00a          rcall __itoa1
000b9d e684          ldi  r24,100
000b9e 2799          clr  r25
000b9f d007          rcall __itoa1
000ba0 e08a          ldi  r24,10
000ba1 d005          rcall __itoa1
000ba2 2f6e          mov  r22,r30
000ba3 d010          rcall __itoa5
000ba4 2766          clr  r22
000ba5 936c          st   x,r22
000ba6 9508          ret
                 
                 __itoa1:
000ba7 2766          clr	 r22
                 __itoa2:
000ba8 17e8          cp   r30,r24
000ba9 07f9          cpc  r31,r25
000baa f020          brlo __itoa3
000bab 9563          inc  r22
000bac 1be8          sub  r30,r24
000bad 0bf9          sbc  r31,r25
000bae f7c9          brne __itoa2
                 __itoa3:
000baf 2366          tst  r22
000bb0 f411          brne __itoa4
000bb1 f016          brts __itoa5
000bb2 9508          ret
                 __itoa4:
000bb3 9468          set
                 __itoa5:
000bb4 5d60          subi r22,-0x30
000bb5 936d          st   x+,r22
000bb6 9508          ret
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcat:
000bb7 91e9          ld   r30,y+
000bb8 91f9          ld   r31,y+
000bb9 91a9          ld   r26,y+
000bba 91b9          ld   r27,y+
000bbb 01cd          movw r24,r26
                 strcat0:
000bbc 916d          ld   r22,x+
000bbd 2366          tst  r22
000bbe f7e9          brne strcat0
000bbf 9711          sbiw r26,1
                 strcat1:
000bc0 9161          ld   r22,z+
000bc1 936d          st   x+,r22
000bc2 2366          tst  r22
000bc3 f7e1          brne strcat1
000bc4 01fc          movw r30,r24
000bc5 9508          ret
                 _strcpy:
000bc6 91e9          ld   r30,y+
000bc7 91f9          ld   r31,y+
000bc8 91a9          ld   r26,y+
000bc9 91b9          ld   r27,y+
000bca 01cd          movw r24,r26
                 strcpy0:
000bcb 9161          ld   r22,z+
000bcc 936d          st   x+,r22
000bcd 2366          tst  r22
000bce f7e1          brne strcpy0
000bcf 01fc          movw r30,r24
000bd0 9508          ret
                 _strlen:
000bd1 91a9          ld   r26,y+
000bd2 91b9          ld   r27,y+
000bd3 27ee          clr  r30
000bd4 27ff          clr  r31
                 strlen0:
000bd5 916d          ld   r22,x+
000bd6 2366          tst  r22
000bd7 f011          breq strlen1
000bd8 9631          adiw r30,1
000bd9 cffb          rjmp strlen0
                 strlen1:
000bda 9508          ret
                 _strlenf:
000bdb 27aa          clr  r26
000bdc 27bb          clr  r27
000bdd 91e9          ld   r30,y+
000bde 91f9          ld   r31,y+
                 strlenf0:
000bdf 9005      	lpm  r0,z+
000be0 2000          tst  r0
000be1 f011          breq strlenf1
000be2 9611          adiw r26,1
000be3 cffb          rjmp strlenf0
                 strlenf1:
000be4 01fd          movw r30,r26
000be5 9508          ret
                 
                 	.CSEG
                 _ds18b20_select:
000be6 931a      	ST   -Y,R17
000be7 940e 0cee 	CALL _w1_init
000be9 30e0      	CPI  R30,0
000bea f411      	BRNE _0x2080003
000beb e0e0      	LDI  R30,LOW(0)
000bec c0a2      	RJMP _0x20E0002
                 _0x2080003:
000bed 81e9      	LDD  R30,Y+1
000bee 81fa      	LDD  R31,Y+1+1
000bef 9730      	SBIW R30,0
000bf0 f089      	BREQ _0x2080004
000bf1 e5e5      	LDI  R30,LOW(85)
000bf2 93ea      	ST   -Y,R30
000bf3 940e 0d34 	CALL _w1_write
000bf5 e010      	LDI  R17,LOW(0)
                 _0x2080006:
000bf6 81a9      	LDD  R26,Y+1
000bf7 81ba      	LDD  R27,Y+1+1
000bf8 91ed      	LD   R30,X+
000bf9 83a9      	STD  Y+1,R26
000bfa 83ba      	STD  Y+1+1,R27
000bfb 93ea      	ST   -Y,R30
000bfc 940e 0d34 	CALL _w1_write
000bfe 5f1f      	SUBI R17,-LOW(1)
000bff 3018      	CPI  R17,8
000c00 f3a8      	BRLO _0x2080006
000c01 c004      	RJMP _0x2080008
                 _0x2080004:
000c02 ecec      	LDI  R30,LOW(204)
000c03 93ea      	ST   -Y,R30
000c04 940e 0d34 	CALL _w1_write
                 _0x2080008:
000c06 e0e1      	LDI  R30,LOW(1)
000c07 c087      	RJMP _0x20E0002
                 _ds18b20_read_spd:
000c08 940e 0e6c 	CALL __SAVELOCR4
000c0a 81ec      	LDD  R30,Y+4
000c0b 81fd      	LDD  R31,Y+4+1
000c0c 93fa      	ST   -Y,R31
000c0d 93ea      	ST   -Y,R30
000c0e dfd7      	RCALL _ds18b20_select
000c0f 30e0      	CPI  R30,0
000c10 f411      	BRNE _0x2080009
000c11 e0e0      	LDI  R30,LOW(0)
000c12 c01d      	RJMP _0x20E0003
                 _0x2080009:
000c13 ebee      	LDI  R30,LOW(190)
000c14 93ea      	ST   -Y,R30
000c15 940e 0d34 	CALL _w1_write
000c17 e010      	LDI  R17,LOW(0)
                +
000c18 e228     +LDI R18 , LOW ( ___ds18b20_scratch_pad )
000c19 e032     +LDI R19 , HIGH ( ___ds18b20_scratch_pad )
                 	__POINTWRM 18,19,___ds18b20_scratch_pad
                 _0x208000B:
000c1a 933f      	PUSH R19
000c1b 932f      	PUSH R18
                +
000c1c 5f2f     +SUBI R18 , LOW ( - 1 )
000c1d 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000c1e 940e 0d2f 	CALL _w1_read
000c20 91af      	POP  R26
000c21 91bf      	POP  R27
000c22 93ec      	ST   X,R30
000c23 5f1f      	SUBI R17,-LOW(1)
000c24 3019      	CPI  R17,9
000c25 f3a0      	BRLO _0x208000B
000c26 e2e8      	LDI  R30,LOW(___ds18b20_scratch_pad)
000c27 e0f2      	LDI  R31,HIGH(___ds18b20_scratch_pad)
000c28 93fa      	ST   -Y,R31
000c29 93ea      	ST   -Y,R30
000c2a e0e9      	LDI  R30,LOW(9)
000c2b 93ea      	ST   -Y,R30
000c2c 940e 0d3e 	CALL _w1_dow_crc8
000c2e 940e 0e54 	CALL __LNEGB1
                 _0x20E0003:
000c30 940e 0e73 	CALL __LOADLOCR4
000c32 9626      	ADIW R28,6
000c33 9508      	RET
                 _ds18b20_temperature:
000c34 931a      	ST   -Y,R17
000c35 81e9      	LDD  R30,Y+1
000c36 81fa      	LDD  R31,Y+1+1
000c37 93fa      	ST   -Y,R31
000c38 93ea      	ST   -Y,R30
000c39 dfce      	RCALL _ds18b20_read_spd
000c3a 30e0      	CPI  R30,0
000c3b f429      	BRNE _0x208000D
                +
000c3c e0e0     +LDI R30 , LOW ( 0xC61C3C00 )
000c3d e3fc     +LDI R31 , HIGH ( 0xC61C3C00 )
000c3e e16c     +LDI R22 , BYTE3 ( 0xC61C3C00 )
000c3f ec76     +LDI R23 , BYTE4 ( 0xC61C3C00 )
                 	__GETD1N 0xC61C3C00
000c40 c04e      	RJMP _0x20E0002
                 _0x208000D:
                +
000c41 91a0 022c+LDS R26 , ___ds18b20_scratch_pad + ( 4 )
                 	__GETB2MN ___ds18b20_scratch_pad,4
000c43 e0b0      	LDI  R27,0
000c44 e0e5      	LDI  R30,LOW(5)
000c45 940e 0e46 	CALL __ASRW12
000c47 70e3      	ANDI R30,LOW(0x3)
000c48 2f1e      	MOV  R17,R30
000c49 81e9      	LDD  R30,Y+1
000c4a 81fa      	LDD  R31,Y+1+1
000c4b 93fa      	ST   -Y,R31
000c4c 93ea      	ST   -Y,R30
000c4d df98      	RCALL _ds18b20_select
000c4e 30e0      	CPI  R30,0
000c4f f429      	BRNE _0x208000E
                +
000c50 e0e0     +LDI R30 , LOW ( 0xC61C3C00 )
000c51 e3fc     +LDI R31 , HIGH ( 0xC61C3C00 )
000c52 e16c     +LDI R22 , BYTE3 ( 0xC61C3C00 )
000c53 ec76     +LDI R23 , BYTE4 ( 0xC61C3C00 )
                 	__GETD1N 0xC61C3C00
000c54 c03a      	RJMP _0x20E0002
                 _0x208000E:
000c55 e4e4      	LDI  R30,LOW(68)
000c56 93ea      	ST   -Y,R30
000c57 940e 0d34 	CALL _w1_write
000c59 2fe1      	MOV  R30,R17
000c5a e6a6      	LDI  R26,LOW(_conv_delay_G104*2)
000c5b e0b0      	LDI  R27,HIGH(_conv_delay_G104*2)
000c5c e0f0      	LDI  R31,0
000c5d 0fee      	LSL  R30
000c5e 1fff      	ROL  R31
000c5f 0fea      	ADD  R30,R26
000c60 1ffb      	ADC  R31,R27
000c61 940e 0e5d 	CALL __GETW1PF
000c63 93fa      	ST   -Y,R31
000c64 93ea      	ST   -Y,R30
000c65 940e 0ce2 	CALL _delay_ms
000c67 81e9      	LDD  R30,Y+1
000c68 81fa      	LDD  R31,Y+1+1
000c69 93fa      	ST   -Y,R31
000c6a 93ea      	ST   -Y,R30
000c6b df9c      	RCALL _ds18b20_read_spd
000c6c 30e0      	CPI  R30,0
000c6d f429      	BRNE _0x208000F
                +
000c6e e0e0     +LDI R30 , LOW ( 0xC61C3C00 )
000c6f e3fc     +LDI R31 , HIGH ( 0xC61C3C00 )
000c70 e16c     +LDI R22 , BYTE3 ( 0xC61C3C00 )
000c71 ec76     +LDI R23 , BYTE4 ( 0xC61C3C00 )
                 	__GETD1N 0xC61C3C00
000c72 c01c      	RJMP _0x20E0002
                 _0x208000F:
000c73 940e 0cee 	CALL _w1_init
000c75 2fe1      	MOV  R30,R17
000c76 e6ae      	LDI  R26,LOW(_bit_mask_G104*2)
000c77 e0b0      	LDI  R27,HIGH(_bit_mask_G104*2)
000c78 e0f0      	LDI  R31,0
000c79 0fee      	LSL  R30
000c7a 1fff      	ROL  R31
000c7b 0fea      	ADD  R30,R26
000c7c 1ffb      	ADC  R31,R27
000c7d 940e 0e5d 	CALL __GETW1PF
000c7f 91a0 0228 	LDS  R26,___ds18b20_scratch_pad
000c81 91b0 0229 	LDS  R27,___ds18b20_scratch_pad+1
000c83 23ea      	AND  R30,R26
000c84 23fb      	AND  R31,R27
000c85 940e 0e4f 	CALL __CWD1
000c87 940e 0dba 	CALL __CDF1
                +
000c89 e0a0     +LDI R26 , LOW ( 0x3D800000 )
000c8a e0b0     +LDI R27 , HIGH ( 0x3D800000 )
000c8b e880     +LDI R24 , BYTE3 ( 0x3D800000 )
000c8c e39d     +LDI R25 , BYTE4 ( 0x3D800000 )
                 	__GETD2N 0x3D800000
000c8d 940e 0de8 	CALL __MULF12
                 _0x20E0002:
000c8f 8118      	LDD  R17,Y+0
000c90 9623      	ADIW R28,3
000c91 9508      	RET
                 _ds18b20_init:
000c92 81eb      	LDD  R30,Y+3
000c93 81fc      	LDD  R31,Y+3+1
000c94 93fa      	ST   -Y,R31
000c95 93ea      	ST   -Y,R30
000c96 df4f      	RCALL _ds18b20_select
000c97 30e0      	CPI  R30,0
000c98 f411      	BRNE _0x2080010
000c99 e0e0      	LDI  R30,LOW(0)
000c9a c045      	RJMP _0x20E0001
                 _0x2080010:
000c9b 81e8      	LD   R30,Y
000c9c 95e2      	SWAP R30
000c9d 7fe0      	ANDI R30,0xF0
000c9e 0fee      	LSL  R30
000c9f 61ef      	ORI  R30,LOW(0x1F)
000ca0 83e8      	ST   Y,R30
000ca1 e4ee      	LDI  R30,LOW(78)
000ca2 93ea      	ST   -Y,R30
000ca3 940e 0d34 	CALL _w1_write
000ca5 81e9      	LDD  R30,Y+1
000ca6 93ea      	ST   -Y,R30
000ca7 940e 0d34 	CALL _w1_write
000ca9 81ea      	LDD  R30,Y+2
000caa 93ea      	ST   -Y,R30
000cab 940e 0d34 	CALL _w1_write
000cad 81e8      	LD   R30,Y
000cae 93ea      	ST   -Y,R30
000caf 940e 0d34 	CALL _w1_write
000cb1 81eb      	LDD  R30,Y+3
000cb2 81fc      	LDD  R31,Y+3+1
000cb3 93fa      	ST   -Y,R31
000cb4 93ea      	ST   -Y,R30
000cb5 df52      	RCALL _ds18b20_read_spd
000cb6 30e0      	CPI  R30,0
000cb7 f411      	BRNE _0x2080011
000cb8 e0e0      	LDI  R30,LOW(0)
000cb9 c026      	RJMP _0x20E0001
                 _0x2080011:
                +
000cba 91a0 022b+LDS R26 , ___ds18b20_scratch_pad + ( 3 )
                 	__GETB2MN ___ds18b20_scratch_pad,3
000cbc 81ea      	LDD  R30,Y+2
000cbd 17ea      	CP   R30,R26
000cbe f451      	BRNE _0x2080013
                +
000cbf 91a0 022a+LDS R26 , ___ds18b20_scratch_pad + ( 2 )
                 	__GETB2MN ___ds18b20_scratch_pad,2
000cc1 81e9      	LDD  R30,Y+1
000cc2 17ea      	CP   R30,R26
000cc3 f429      	BRNE _0x2080013
                +
000cc4 91a0 022c+LDS R26 , ___ds18b20_scratch_pad + ( 4 )
                 	__GETB2MN ___ds18b20_scratch_pad,4
000cc6 81e8      	LD   R30,Y
000cc7 17ea      	CP   R30,R26
000cc8 f011      	BREQ _0x2080012
                 _0x2080013:
000cc9 e0e0      	LDI  R30,LOW(0)
000cca c015      	RJMP _0x20E0001
                 _0x2080012:
000ccb 81eb      	LDD  R30,Y+3
000ccc 81fc      	LDD  R31,Y+3+1
000ccd 93fa      	ST   -Y,R31
000cce 93ea      	ST   -Y,R30
000ccf df16      	RCALL _ds18b20_select
000cd0 30e0      	CPI  R30,0
000cd1 f411      	BRNE _0x2080015
000cd2 e0e0      	LDI  R30,LOW(0)
000cd3 c00c      	RJMP _0x20E0001
                 _0x2080015:
000cd4 e4e8      	LDI  R30,LOW(72)
000cd5 93ea      	ST   -Y,R30
000cd6 940e 0d34 	CALL _w1_write
000cd8 e0ef      	LDI  R30,LOW(15)
000cd9 e0f0      	LDI  R31,HIGH(15)
000cda 93fa      	ST   -Y,R31
000cdb 93ea      	ST   -Y,R30
000cdc 940e 0ce2 	CALL _delay_ms
000cde 940e 0cee 	CALL _w1_init
                 _0x20E0001:
000ce0 9625      	ADIW R28,5
000ce1 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _rx_buffer:
000220           	.BYTE 0x8
                 ___ds18b20_scratch_pad:
000228           	.BYTE 0x9
                 _str:
000231           	.BYTE 0xF
                 _LCD_Buffer:
000240           	.BYTE 0xF
                 _str1:
00024f           	.BYTE 0xC
                 _Temp1:
00025b           	.BYTE 0x2
                 _T:
00025d           	.BYTE 0x2
                 _khoi:
00025f           	.BYTE 0x2
                 _anh_sang:
000261           	.BYTE 0x2
                 _khoi1:
000263           	.BYTE 0x2
                 _anh_sang1:
000265           	.BYTE 0x2
                 _khoi_0_1_G000:
000267           	.BYTE 0x2
                 _khoi_0_2_G000:
000269           	.BYTE 0x2
                 _anh_sang_0_1_G000:
00026b           	.BYTE 0x2
                 _anh_sang_0_2_G000:
00026d           	.BYTE 0x2
                 _Temp_0_G000:
00026f           	.BYTE 0x2
                 _cb_Temp_G000:
000271           	.BYTE 0x2
                 _cb_khoi_1_G000:
000273           	.BYTE 0x2
                 _cb_khoi_2_G000:
000275           	.BYTE 0x2
                 _cb_anh_sang_1_G000:
000277           	.BYTE 0x2
                 _cb_anh_sang_2_G000:
000279           	.BYTE 0x2
                 _khoi_ss_1:
00027b           	.BYTE 0x2
                 _khoi_ss_2:
00027d           	.BYTE 0x2
                 _anh_sang_ss_1:
00027f           	.BYTE 0x2
                 _anh_sang_ss_2:
000281           	.BYTE 0x2
                 _Temp_ss:
000283           	.BYTE 0x2
                 _mode1:
000285           	.BYTE 0x2
                 _nguong_khoi_1:
000287           	.BYTE 0x2
                 _nguong_khoi_2:
000289           	.BYTE 0x2
                 _nguong_as_1:
00028b           	.BYTE 0x2
                 _nguong_as_2:
00028d           	.BYTE 0x2
                 _nguong_nhiet:
00028f           	.BYTE 0x2
                 _m:
000291           	.BYTE 0x2
                 _n:
000293           	.BYTE 0x2
                 _mode2:
000295           	.BYTE 0x2
                 __base_y_G100:
000297           	.BYTE 0x4
                 __lcd_x:
00029b           	.BYTE 0x1
                 __lcd_y:
00029c           	.BYTE 0x1
                 __lcd_maxx:
00029d           	.BYTE 0x1
                 __seed_G102:
00029e           	.BYTE 0x4
                 
                 	.CSEG
                 
                 	.CSEG
                 _delay_ms:
000ce2 91e9      	ld   r30,y+
000ce3 91f9      	ld   r31,y+
000ce4 9630      	adiw r30,0
000ce5 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000ce6 ed80     +LDI R24 , LOW ( 0x7D0 )
000ce7 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000ce8 9701     +SBIW R24 , 1
000ce9 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000cea 95a8      	wdr
000ceb 9731      	sbiw r30,1
000cec f7c9      	brne __delay_ms0
                 __delay_ms1:
000ced 9508      	ret
                 
                 	.equ __w1_port=0x15
                 	.equ __w1_bit=0x03
                 
                 _w1_init:
000cee 27ee      	clr  r30
000cef 98ab      	cbi  __w1_port,__w1_bit
000cf0 9aa3      	sbi  __w1_port-1,__w1_bit
                +
000cf1 ec80     +LDI R24 , LOW ( 0x3C0 )
000cf2 e093     +LDI R25 , HIGH ( 0x3C0 )
                +__DELAY_USW_LOOP :
000cf3 9701     +SBIW R24 , 1
000cf4 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x3C0
000cf5 98a3      	cbi  __w1_port-1,__w1_bit
                +
000cf6 e285     +LDI R24 , LOW ( 0x25 )
                +__DELAY_USB_LOOP :
000cf7 958a     +DEC R24
000cf8 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x25
000cf9 9b9b      	sbis __w1_port-2,__w1_bit
000cfa 9508      	ret
                +
000cfb ec8b     +LDI R24 , LOW ( 0xCB )
                +__DELAY_USB_LOOP :
000cfc 958a     +DEC R24
000cfd f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0xCB
000cfe 9b9b      	sbis __w1_port-2,__w1_bit
000cff e0e1      	ldi  r30,1
                +
000d00 e08c     +LDI R24 , LOW ( 0x30C )
000d01 e093     +LDI R25 , HIGH ( 0x30C )
                +__DELAY_USW_LOOP :
000d02 9701     +SBIW R24 , 1
000d03 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x30C
000d04 9508      	ret
                 
                 __w1_read_bit:
000d05 9aa3      	sbi  __w1_port-1,__w1_bit
                +
000d06 e085     +LDI R24 , LOW ( 0x5 )
                +__DELAY_USB_LOOP :
000d07 958a     +DEC R24
000d08 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x5
000d09 98a3      	cbi  __w1_port-1,__w1_bit
                +
000d0a e18d     +LDI R24 , LOW ( 0x1D )
                +__DELAY_USB_LOOP :
000d0b 958a     +DEC R24
000d0c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x1D
000d0d 9488      	clc
000d0e 999b      	sbic __w1_port-2,__w1_bit
000d0f 9408      	sec
000d10 95e7      	ror  r30
                +
000d11 ed85     +LDI R24 , LOW ( 0xD5 )
                +__DELAY_USB_LOOP :
000d12 958a     +DEC R24
000d13 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0xD5
000d14 9508      	ret
                 
                 __w1_write_bit:
000d15 94e8      	clt
000d16 9aa3      	sbi  __w1_port-1,__w1_bit
                +
000d17 e085     +LDI R24 , LOW ( 0x5 )
                +__DELAY_USB_LOOP :
000d18 958a     +DEC R24
000d19 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x5
000d1a fd70      	sbrc r23,0
000d1b 98a3      	cbi  __w1_port-1,__w1_bit
                +
000d1c e283     +LDI R24 , LOW ( 0x23 )
                +__DELAY_USB_LOOP :
000d1d 958a     +DEC R24
000d1e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x23
000d1f 999b      	sbic __w1_port-2,__w1_bit
000d20 c003      	rjmp __w1_write_bit0
000d21 ff70      	sbrs r23,0
000d22 c003      	rjmp __w1_write_bit1
000d23 9508      	ret
                 __w1_write_bit0:
000d24 ff70      	sbrs r23,0
000d25 9508      	ret
                 __w1_write_bit1:
                +
000d26 ec88     +LDI R24 , LOW ( 0xC8 )
                +__DELAY_USB_LOOP :
000d27 958a     +DEC R24
000d28 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0xC8
000d29 98a3      	cbi  __w1_port-1,__w1_bit
                +
000d2a e08d     +LDI R24 , LOW ( 0xD )
                +__DELAY_USB_LOOP :
000d2b 958a     +DEC R24
000d2c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0xD
000d2d 9468      	set
000d2e 9508      	ret
                 
                 _w1_read:
000d2f e068      	ldi  r22,8
                 	__w1_read0:
000d30 dfd4      	rcall __w1_read_bit
000d31 956a      	dec  r22
000d32 f7e9      	brne __w1_read0
000d33 9508      	ret
                 
                 _w1_write:
000d34 e068      	ldi  r22,8
000d35 9179      	ld   r23,y+
000d36 27ee      	clr  r30
                 __w1_write0:
000d37 dfdd      	rcall __w1_write_bit
000d38 f426      	brtc __w1_write1
000d39 9577      	ror  r23
000d3a 956a      	dec  r22
000d3b f7d9      	brne __w1_write0
000d3c 95e3      	inc  r30
                 __w1_write1:
000d3d 9508      	ret
                 
                 _w1_dow_crc8:
000d3e 27ee      	clr  r30
000d3f 8188      	ld   r24,y
000d40 2388      	tst  r24
000d41 f081      	breq __w1_dow_crc83
000d42 e168      	ldi  r22,0x18
000d43 81a9      	ldd  r26,y+1
000d44 81ba      	ldd  r27,y+2
                 __w1_dow_crc80:
000d45 e098      	ldi  r25,8
000d46 91fd      	ld   r31,x+
                 __w1_dow_crc81:
000d47 2f7f      	mov  r23,r31
000d48 277e      	eor  r23,r30
000d49 9577      	ror  r23
000d4a f408      	brcc __w1_dow_crc82
000d4b 27e6      	eor  r30,r22
                 __w1_dow_crc82:
000d4c 95e7      	ror  r30
000d4d 95f6      	lsr  r31
000d4e 959a      	dec  r25
000d4f f7b9      	brne __w1_dow_crc81
000d50 958a      	dec  r24
000d51 f799      	brne __w1_dow_crc80
                 __w1_dow_crc83:
000d52 9623      	adiw r28,3
000d53 9508      	ret
                 
                 __ROUND_REPACK:
000d54 2355      	TST  R21
000d55 f442      	BRPL __REPACK
000d56 3850      	CPI  R21,0x80
000d57 f411      	BRNE __ROUND_REPACK0
000d58 ffe0      	SBRS R30,0
000d59 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000d5a 9631      	ADIW R30,1
000d5b 1f69      	ADC  R22,R25
000d5c 1f79      	ADC  R23,R25
000d5d f06b      	BRVS __REPACK1
                 
                 __REPACK:
000d5e e850      	LDI  R21,0x80
000d5f 2757      	EOR  R21,R23
000d60 f411      	BRNE __REPACK0
000d61 935f      	PUSH R21
000d62 c073      	RJMP __ZERORES
                 __REPACK0:
000d63 3f5f      	CPI  R21,0xFF
000d64 f031      	BREQ __REPACK1
000d65 0f66      	LSL  R22
000d66 0c00      	LSL  R0
000d67 9557      	ROR  R21
000d68 9567      	ROR  R22
000d69 2f75      	MOV  R23,R21
000d6a 9508      	RET
                 __REPACK1:
000d6b 935f      	PUSH R21
000d6c 2000      	TST  R0
000d6d f00a      	BRMI __REPACK2
000d6e c073      	RJMP __MAXRES
                 __REPACK2:
000d6f c06c      	RJMP __MINRES
                 
                 __UNPACK:
000d70 e850      	LDI  R21,0x80
000d71 2e19      	MOV  R1,R25
000d72 2215      	AND  R1,R21
000d73 0f88      	LSL  R24
000d74 1f99      	ROL  R25
000d75 2795      	EOR  R25,R21
000d76 0f55      	LSL  R21
000d77 9587      	ROR  R24
                 
                 __UNPACK1:
000d78 e850      	LDI  R21,0x80
000d79 2e07      	MOV  R0,R23
000d7a 2205      	AND  R0,R21
000d7b 0f66      	LSL  R22
000d7c 1f77      	ROL  R23
000d7d 2775      	EOR  R23,R21
000d7e 0f55      	LSL  R21
000d7f 9567      	ROR  R22
000d80 9508      	RET
                 
                 __CFD1U:
000d81 9468      	SET
000d82 c001      	RJMP __CFD1U0
                 __CFD1:
000d83 94e8      	CLT
                 __CFD1U0:
000d84 935f      	PUSH R21
000d85 dff2      	RCALL __UNPACK1
000d86 3870      	CPI  R23,0x80
000d87 f018      	BRLO __CFD10
000d88 3f7f      	CPI  R23,0xFF
000d89 f408      	BRCC __CFD10
000d8a c04b      	RJMP __ZERORES
                 __CFD10:
000d8b e156      	LDI  R21,22
000d8c 1b57      	SUB  R21,R23
000d8d f4aa      	BRPL __CFD11
000d8e 9551      	NEG  R21
000d8f 3058      	CPI  R21,8
000d90 f40e      	BRTC __CFD19
000d91 3059      	CPI  R21,9
                 __CFD19:
000d92 f030      	BRLO __CFD17
000d93 efef      	SER  R30
000d94 efff      	SER  R31
000d95 ef6f      	SER  R22
000d96 e77f      	LDI  R23,0x7F
000d97 f977      	BLD  R23,7
000d98 c01a      	RJMP __CFD15
                 __CFD17:
000d99 2777      	CLR  R23
000d9a 2355      	TST  R21
000d9b f0b9      	BREQ __CFD15
                 __CFD18:
000d9c 0fee      	LSL  R30
000d9d 1fff      	ROL  R31
000d9e 1f66      	ROL  R22
000d9f 1f77      	ROL  R23
000da0 955a      	DEC  R21
000da1 f7d1      	BRNE __CFD18
000da2 c010      	RJMP __CFD15
                 __CFD11:
000da3 2777      	CLR  R23
                 __CFD12:
000da4 3058      	CPI  R21,8
000da5 f028      	BRLO __CFD13
000da6 2fef      	MOV  R30,R31
000da7 2ff6      	MOV  R31,R22
000da8 2f67      	MOV  R22,R23
000da9 5058      	SUBI R21,8
000daa cff9      	RJMP __CFD12
                 __CFD13:
000dab 2355      	TST  R21
000dac f031      	BREQ __CFD15
                 __CFD14:
000dad 9576      	LSR  R23
000dae 9567      	ROR  R22
000daf 95f7      	ROR  R31
000db0 95e7      	ROR  R30
000db1 955a      	DEC  R21
000db2 f7d1      	BRNE __CFD14
                 __CFD15:
000db3 2000      	TST  R0
000db4 f40a      	BRPL __CFD16
000db5 d088      	RCALL __ANEGD1
                 __CFD16:
000db6 915f      	POP  R21
000db7 9508      	RET
                 
                 __CDF1U:
000db8 9468      	SET
000db9 c001      	RJMP __CDF1U0
                 __CDF1:
000dba 94e8      	CLT
                 __CDF1U0:
000dbb 9730      	SBIW R30,0
000dbc 4060      	SBCI R22,0
000dbd 4070      	SBCI R23,0
000dbe f0b1      	BREQ __CDF10
000dbf 2400      	CLR  R0
000dc0 f026      	BRTS __CDF11
000dc1 2377      	TST  R23
000dc2 f412      	BRPL __CDF11
000dc3 9400      	COM  R0
000dc4 d079      	RCALL __ANEGD1
                 __CDF11:
000dc5 2e17      	MOV  R1,R23
000dc6 e17e      	LDI  R23,30
000dc7 2011      	TST  R1
                 __CDF12:
000dc8 f032      	BRMI __CDF13
000dc9 957a      	DEC  R23
000dca 0fee      	LSL  R30
000dcb 1fff      	ROL  R31
000dcc 1f66      	ROL  R22
000dcd 1c11      	ROL  R1
000dce cff9      	RJMP __CDF12
                 __CDF13:
000dcf 2fef      	MOV  R30,R31
000dd0 2ff6      	MOV  R31,R22
000dd1 2d61      	MOV  R22,R1
000dd2 935f      	PUSH R21
000dd3 df8a      	RCALL __REPACK
000dd4 915f      	POP  R21
                 __CDF10:
000dd5 9508      	RET
                 
                 __ZERORES:
000dd6 27ee      	CLR  R30
000dd7 27ff      	CLR  R31
000dd8 2766      	CLR  R22
000dd9 2777      	CLR  R23
000dda 915f      	POP  R21
000ddb 9508      	RET
                 
                 __MINRES:
000ddc efef      	SER  R30
000ddd efff      	SER  R31
000dde e76f      	LDI  R22,0x7F
000ddf ef7f      	SER  R23
000de0 915f      	POP  R21
000de1 9508      	RET
                 
                 __MAXRES:
000de2 efef      	SER  R30
000de3 efff      	SER  R31
000de4 e76f      	LDI  R22,0x7F
000de5 e77f      	LDI  R23,0x7F
000de6 915f      	POP  R21
000de7 9508      	RET
                 
                 __MULF12:
000de8 935f      	PUSH R21
000de9 df86      	RCALL __UNPACK
000dea 3870      	CPI  R23,0x80
000deb f351      	BREQ __ZERORES
000dec 3890      	CPI  R25,0x80
000ded f341      	BREQ __ZERORES
000dee 2401      	EOR  R0,R1
000def 9408      	SEC
000df0 1f79      	ADC  R23,R25
000df1 f423      	BRVC __MULF124
000df2 f31c      	BRLT __ZERORES
                 __MULF125:
000df3 2000      	TST  R0
000df4 f33a      	BRMI __MINRES
000df5 cfec      	RJMP __MAXRES
                 __MULF124:
000df6 920f      	PUSH R0
000df7 931f      	PUSH R17
000df8 932f      	PUSH R18
000df9 933f      	PUSH R19
000dfa 934f      	PUSH R20
000dfb 2711      	CLR  R17
000dfc 2722      	CLR  R18
000dfd 2799      	CLR  R25
000dfe 9f68      	MUL  R22,R24
000dff 01a0      	MOVW R20,R0
000e00 9f8f      	MUL  R24,R31
000e01 2d30      	MOV  R19,R0
000e02 0d41      	ADD  R20,R1
000e03 1f59      	ADC  R21,R25
000e04 9f6b      	MUL  R22,R27
000e05 0d30      	ADD  R19,R0
000e06 1d41      	ADC  R20,R1
000e07 1f59      	ADC  R21,R25
000e08 9f8e      	MUL  R24,R30
000e09 d027      	RCALL __MULF126
000e0a 9fbf      	MUL  R27,R31
000e0b d025      	RCALL __MULF126
000e0c 9f6a      	MUL  R22,R26
000e0d d023      	RCALL __MULF126
000e0e 9fbe      	MUL  R27,R30
000e0f d01d      	RCALL __MULF127
000e10 9faf      	MUL  R26,R31
000e11 d01b      	RCALL __MULF127
000e12 9fae      	MUL  R26,R30
000e13 0d11      	ADD  R17,R1
000e14 1f29      	ADC  R18,R25
000e15 1f39      	ADC  R19,R25
000e16 1f49      	ADC  R20,R25
000e17 1f59      	ADC  R21,R25
000e18 2fe3      	MOV  R30,R19
000e19 2ff4      	MOV  R31,R20
000e1a 2f65      	MOV  R22,R21
000e1b 2f52      	MOV  R21,R18
000e1c 914f      	POP  R20
000e1d 913f      	POP  R19
000e1e 912f      	POP  R18
000e1f 911f      	POP  R17
000e20 900f      	POP  R0
000e21 2366      	TST  R22
000e22 f02a      	BRMI __MULF122
000e23 0f55      	LSL  R21
000e24 1fee      	ROL  R30
000e25 1fff      	ROL  R31
000e26 1f66      	ROL  R22
000e27 c002      	RJMP __MULF123
                 __MULF122:
000e28 9573      	INC  R23
000e29 f24b      	BRVS __MULF125
                 __MULF123:
000e2a df29      	RCALL __ROUND_REPACK
000e2b 915f      	POP  R21
000e2c 9508      	RET
                 
                 __MULF127:
000e2d 0d10      	ADD  R17,R0
000e2e 1d21      	ADC  R18,R1
000e2f 1f39      	ADC  R19,R25
000e30 c002      	RJMP __MULF128
                 __MULF126:
000e31 0d20      	ADD  R18,R0
000e32 1d31      	ADC  R19,R1
                 __MULF128:
000e33 1f49      	ADC  R20,R25
000e34 1f59      	ADC  R21,R25
000e35 9508      	RET
                 
                 __ADDW2R15:
000e36 2400      	CLR  R0
000e37 0daf      	ADD  R26,R15
000e38 1db0      	ADC  R27,R0
000e39 9508      	RET
                 
                 __ANEGW1:
000e3a 95f1      	NEG  R31
000e3b 95e1      	NEG  R30
000e3c 40f0      	SBCI R31,0
000e3d 9508      	RET
                 
                 __ANEGD1:
000e3e 95f0      	COM  R31
000e3f 9560      	COM  R22
000e40 9570      	COM  R23
000e41 95e1      	NEG  R30
000e42 4fff      	SBCI R31,-1
000e43 4f6f      	SBCI R22,-1
000e44 4f7f      	SBCI R23,-1
000e45 9508      	RET
                 
                 __ASRW12:
000e46 23ee      	TST  R30
000e47 2e0e      	MOV  R0,R30
000e48 01fd      	MOVW R30,R26
000e49 f021      	BREQ __ASRW12R
                 __ASRW12L:
000e4a 95f5      	ASR  R31
000e4b 95e7      	ROR  R30
000e4c 940a      	DEC  R0
000e4d f7e1      	BRNE __ASRW12L
                 __ASRW12R:
000e4e 9508      	RET
                 
                 __CWD1:
000e4f 2f6f      	MOV  R22,R31
000e50 0f66      	ADD  R22,R22
000e51 0b66      	SBC  R22,R22
000e52 2f76      	MOV  R23,R22
000e53 9508      	RET
                 
                 __LNEGB1:
000e54 23ee      	TST  R30
000e55 e0e1      	LDI  R30,1
000e56 f009      	BREQ __LNEGB1F
000e57 27ee      	CLR  R30
                 __LNEGB1F:
000e58 9508      	RET
                 
                 __GETW1P:
000e59 91ed      	LD   R30,X+
000e5a 91fc      	LD   R31,X
000e5b 9711      	SBIW R26,1
000e5c 9508      	RET
                 
                 __GETW1PF:
000e5d 9005      	LPM  R0,Z+
000e5e 91f4      	LPM  R31,Z
000e5f 2de0      	MOV  R30,R0
000e60 9508      	RET
                 
                 __PUTPARD1:
000e61 937a      	ST   -Y,R23
000e62 936a      	ST   -Y,R22
000e63 93fa      	ST   -Y,R31
000e64 93ea      	ST   -Y,R30
000e65 9508      	RET
                 
                 __CPW02:
000e66 2400      	CLR  R0
000e67 160a      	CP   R0,R26
000e68 060b      	CPC  R0,R27
000e69 9508      	RET
                 
                 __SAVELOCR6:
000e6a 935a      	ST   -Y,R21
                 __SAVELOCR5:
000e6b 934a      	ST   -Y,R20
                 __SAVELOCR4:
000e6c 933a      	ST   -Y,R19
                 __SAVELOCR3:
000e6d 932a      	ST   -Y,R18
                 __SAVELOCR2:
000e6e 931a      	ST   -Y,R17
000e6f 930a      	ST   -Y,R16
000e70 9508      	RET
                 
                 __LOADLOCR6:
000e71 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000e72 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000e73 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000e74 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000e75 8119      	LDD  R17,Y+1
000e76 8108      	LD   R16,Y
000e77 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  37 r1 :  15 r2 :   1 r3 :   0 r4 :   0 r5 :   4 r6 :   0 r7 :   3 
r8 :   4 r9 :   4 r10:   6 r11:   6 r12:   8 r13:   6 r14:   0 r15:   6 
r16:  38 r17:  47 r18:  43 r19:  19 r20:  17 r21:  61 r22:  71 r23:  50 
r24:  83 r25:  37 r26: 205 r27: 129 r28:  31 r29:   1 r30: 961 r31: 506 
x  :  87 y  : 647 z  :  22 
Registers used: 31 out of 35 (88.6%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  18 add   :  11 
adiw  :  59 and   :   4 andi  :  11 asr   :   1 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   2 brcs  :   0 break :   0 breq  :  37 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  24 
brlt  :   2 brmi  :  10 brne  :  94 brpl  :   6 brsh  :  12 brtc  :   2 
brts  :   2 brvc  :   1 brvs  :   2 bset  :   0 bst   :   0 call  : 163 
cbi   :  21 cbr   :   0 clc   :   1 clh   :   0 cli   :   1 cln   :   0 
clr   :  40 cls   :   0 clt   :   4 clv   :   0 clz   :   0 com   :   6 
cp    :  28 cpc   :  26 cpi   :  58 cpse  :   0 dec   :  22 des   :   0 
eor   :   6 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   8 ijmp  :   0 
in    :   7 inc   :   5 jmp   :  31 ld    : 105 ldd   : 133 ldi   : 523 
lds   : 189 lpm   :  14 lsl   :  12 lsr   :   2 mov   :  38 movw  :  23 
mul   :  10 muls  :   0 mulsu :   0 neg   :   4 nop   :   0 or    :   0 
ori   :   8 out   :  44 pop   :  14 push  :  13 rcall :  75 ret   :  58 
reti  :   2 rjmp  : 135 rol   :  13 ror   :  12 sbc   :   8 sbci  :   9 
sbi   :  25 sbic  :  23 sbis  :   4 sbiw  :  69 sbr   :   0 sbrc  :   3 
sbrs  :  13 sec   :   2 seh   :   0 sei   :   1 sen   :   0 ser   :   8 
ses   :   0 set   :   5 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    : 456 std   :  50 sts   :  85 sub   :   8 subi  :  24 swap  :   2 
tst   :  25 wdr   :   1 
Instructions used: 77 out of 116 (66.4%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001cf0   6884    524   7408   16384  45.2%
[.dseg] 0x000060 0x0002a2      0    322    322    1119  28.8%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 14 warnings
